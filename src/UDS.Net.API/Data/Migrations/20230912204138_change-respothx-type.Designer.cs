// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UDS.Net.API.Data;

#nullable disable

namespace UDS.Net.API.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20230912204138_change-respothx-type")]
    partial class changerespothxtype
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UDS.Net.API.Entities.A1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BIRTHMO")
                        .HasColumnType("int");

                    b.Property<int?>("BIRTHYR")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EDUC")
                        .HasColumnType("int");

                    b.Property<int?>("HANDED")
                        .HasColumnType("int");

                    b.Property<int?>("HISPANIC")
                        .HasColumnType("int");

                    b.Property<int?>("HISPOR")
                        .HasColumnType("int");

                    b.Property<string>("HISPORX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INDEPEND")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SUB");

                    b.Property<int?>("LEARNED")
                        .HasColumnType("int");

                    b.Property<int?>("LIVSITUA")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MARISTAT")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PRESPART")
                        .HasColumnType("int");

                    b.Property<int?>("PRESTAT")
                        .HasColumnType("int");

                    b.Property<int?>("PRIMLANG")
                        .HasColumnType("int");

                    b.Property<string>("PRIMLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RACE")
                        .HasColumnType("int");

                    b.Property<int?>("RACESEC")
                        .HasColumnType("int");

                    b.Property<string>("RACESECX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RACETER")
                        .HasColumnType("int");

                    b.Property<string>("RACETERX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("RACEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("REASON")
                        .HasColumnType("int");

                    b.Property<int?>("REFERSC")
                        .HasColumnType("int");

                    b.Property<int?>("RESIDENC")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SEX")
                        .HasColumnType("int");

                    b.Property<int?>("SOURCENW")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<string>("ZIP")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("INBIRMO")
                        .HasColumnType("int");

                    b.Property<int?>("INBIRYR")
                        .HasColumnType("int");

                    b.Property<int?>("INCALLS")
                        .HasColumnType("int");

                    b.Property<int?>("INEDUC")
                        .HasColumnType("int");

                    b.Property<int?>("INHISP")
                        .HasColumnType("int");

                    b.Property<int?>("INHISPOR")
                        .HasColumnType("int");

                    b.Property<string>("INHISPOX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INKNOWN")
                        .HasColumnType("int");

                    b.Property<int?>("INLIVWTH")
                        .HasColumnType("int");

                    b.Property<int?>("INRACE")
                        .HasColumnType("int");

                    b.Property<string>("INRACEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INRASEC")
                        .HasColumnType("int");

                    b.Property<string>("INRASECX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INRATER")
                        .HasColumnType("int");

                    b.Property<string>("INRATERX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INRELTO")
                        .HasColumnType("int");

                    b.Property<int?>("INRELY")
                        .HasColumnType("int");

                    b.Property<int?>("INSEX")
                        .HasColumnType("int");

                    b.Property<int?>("INVISITS")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NEWINF")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AFFFAMM")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DADAGEO")
                        .HasColumnType("int");

                    b.Property<int?>("DADDAGE")
                        .HasColumnType("int");

                    b.Property<int?>("DADMOB")
                        .HasColumnType("int");

                    b.Property<int?>("DADMOE")
                        .HasColumnType("int");

                    b.Property<int?>("DADNEUR")
                        .HasColumnType("int");

                    b.Property<int?>("DADPRDX")
                        .HasColumnType("int");

                    b.Property<int?>("DADYOB")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FADMUSO")
                        .HasColumnType("int");

                    b.Property<string>("FADMUSOX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FADMUT")
                        .HasColumnType("int");

                    b.Property<string>("FADMUTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("FFTDMUSO")
                        .HasColumnType("int");

                    b.Property<string>("FFTDMUSX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FFTDMUT")
                        .HasColumnType("int");

                    b.Property<string>("FFTDMUTX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FOTHMUSO")
                        .HasColumnType("int");

                    b.Property<string>("FOTHMUSX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FOTHMUT")
                        .HasColumnType("int");

                    b.Property<string>("FOTHMUTX")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("KIDS")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MOMAGEO")
                        .HasColumnType("int");

                    b.Property<int?>("MOMDAGE")
                        .HasColumnType("int");

                    b.Property<int?>("MOMMOB")
                        .HasColumnType("int");

                    b.Property<int?>("MOMMOE")
                        .HasColumnType("int");

                    b.Property<int?>("MOMNEUR")
                        .HasColumnType("int");

                    b.Property<int?>("MOMPRDX")
                        .HasColumnType("int");

                    b.Property<int?>("MOMYOB")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NWINFKID")
                        .HasColumnType("int");

                    b.Property<int?>("NWINFMUT")
                        .HasColumnType("int");

                    b.Property<int?>("NWINFSIB")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SIBS")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A3s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4D", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DRUGID")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DRUGID");

                    b.HasIndex("VisitId");

                    b.ToTable("tbl_A4Ds");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4G", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANYMEDS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A4Gs");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ABUSOTHR")
                        .HasColumnType("int");

                    b.Property<string>("ABUSX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ALCFREQ")
                        .HasColumnType("int");

                    b.Property<int?>("ALCOCCAS")
                        .HasColumnType("int");

                    b.Property<int?>("ALCOHOL")
                        .HasColumnType("int");

                    b.Property<int?>("ANXIETY")
                        .HasColumnType("int");

                    b.Property<int?>("APNEA")
                        .HasColumnType("int");

                    b.Property<int?>("ARTHLOEX")
                        .HasColumnType("int");

                    b.Property<int?>("ARTHRIT")
                        .HasColumnType("int");

                    b.Property<int?>("ARTHSPIN")
                        .HasColumnType("int");

                    b.Property<int?>("ARTHTYPE")
                        .HasColumnType("int");

                    b.Property<string>("ARTHTYPX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ARTHUNK")
                        .HasColumnType("int");

                    b.Property<int?>("ARTHUPEX")
                        .HasColumnType("int");

                    b.Property<int?>("B12DEF")
                        .HasColumnType("int");

                    b.Property<int?>("BIPOLAR")
                        .HasColumnType("int");

                    b.Property<int?>("CBSTROKE")
                        .HasColumnType("int");

                    b.Property<int?>("CBTIA")
                        .HasColumnType("int");

                    b.Property<int?>("CVAFIB")
                        .HasColumnType("int");

                    b.Property<int?>("CVANGINA")
                        .HasColumnType("int");

                    b.Property<int?>("CVANGIO")
                        .HasColumnType("int");

                    b.Property<int?>("CVBYPASS")
                        .HasColumnType("int");

                    b.Property<int?>("CVCHF")
                        .HasColumnType("int");

                    b.Property<int?>("CVHATT")
                        .HasColumnType("int");

                    b.Property<int?>("CVHVALVE")
                        .HasColumnType("int");

                    b.Property<int?>("CVOTHR")
                        .HasColumnType("int");

                    b.Property<string>("CVOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("CVPACDEF")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DEP2YRS")
                        .HasColumnType("int");

                    b.Property<int?>("DEPOTHR")
                        .HasColumnType("int");

                    b.Property<int?>("DIABETES")
                        .HasColumnType("int");

                    b.Property<int?>("DIABTYPE")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HATTMULT")
                        .HasColumnType("int");

                    b.Property<int?>("HATTYEAR")
                        .HasColumnType("int");

                    b.Property<int?>("HYPERCHO")
                        .HasColumnType("int");

                    b.Property<int?>("HYPERTEN")
                        .HasColumnType("int");

                    b.Property<int?>("INCONTF")
                        .HasColumnType("int");

                    b.Property<int?>("INCONTU")
                        .HasColumnType("int");

                    b.Property<int?>("INSOMN")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPSYDEV")
                        .HasColumnType("int");

                    b.Property<int?>("OCD")
                        .HasColumnType("int");

                    b.Property<int?>("OTHSLEEP")
                        .HasColumnType("int");

                    b.Property<string>("OTHSLEEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PACKSPER")
                        .HasColumnType("int");

                    b.Property<int?>("PD")
                        .HasColumnType("int");

                    b.Property<int?>("PDOTHR")
                        .HasColumnType("int");

                    b.Property<int?>("PDOTHRYR")
                        .HasColumnType("int");

                    b.Property<int?>("PDYR")
                        .HasColumnType("int");

                    b.Property<int?>("PSYCDIS")
                        .HasColumnType("int");

                    b.Property<string>("PSYCDISX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PTSD")
                        .HasColumnType("int");

                    b.Property<int?>("QUITSMOK")
                        .HasColumnType("int");

                    b.Property<int?>("RBD")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SCHIZ")
                        .HasColumnType("int");

                    b.Property<int?>("SEIZURES")
                        .HasColumnType("int");

                    b.Property<int?>("SMOKYRS")
                        .HasColumnType("int");

                    b.Property<int?>("STROKMUL")
                        .HasColumnType("int");

                    b.Property<int?>("STROKYR")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TBI")
                        .HasColumnType("int");

                    b.Property<int?>("TBIBRIEF")
                        .HasColumnType("int");

                    b.Property<int?>("TBIEXTEN")
                        .HasColumnType("int");

                    b.Property<int?>("TBIWOLOS")
                        .HasColumnType("int");

                    b.Property<int?>("TBIYEAR")
                        .HasColumnType("int");

                    b.Property<int?>("THYROID")
                        .HasColumnType("int");

                    b.Property<int?>("TIAMULT")
                        .HasColumnType("int");

                    b.Property<int?>("TIAYEAR")
                        .HasColumnType("int");

                    b.Property<int?>("TOBAC100")
                        .HasColumnType("int");

                    b.Property<int?>("TOBAC30")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A5s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BPDIAS")
                        .HasColumnType("int");

                    b.Property<int?>("BPSYS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HEARAID")
                        .HasColumnType("int");

                    b.Property<int?>("HEARING")
                        .HasColumnType("int");

                    b.Property<int?>("HEARWAID")
                        .HasColumnType("int");

                    b.Property<decimal?>("HEIGHT")
                        .HasColumnType("decimal(3,1)");

                    b.Property<int?>("HRATE")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("VISCORR")
                        .HasColumnType("int");

                    b.Property<int?>("VISION")
                        .HasColumnType("int");

                    b.Property<int?>("VISWCORR")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<int?>("WEIGHT")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CDRGLOB")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("CDRLANG")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("CDRSUM")
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal?>("COMMUN")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("COMPORT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HOMEHOBB")
                        .HasColumnType("decimal(2,1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<decimal?>("JUDGMENT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<decimal?>("MEMORY")
                        .HasColumnType("decimal(2,1)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ORIENT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("PERSCARE")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B4s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AGIT")
                        .HasColumnType("int");

                    b.Property<int?>("AGITSEV")
                        .HasColumnType("int");

                    b.Property<int?>("ANX")
                        .HasColumnType("int");

                    b.Property<int?>("ANXSEV")
                        .HasColumnType("int");

                    b.Property<int?>("APA")
                        .HasColumnType("int");

                    b.Property<int?>("APASEV")
                        .HasColumnType("int");

                    b.Property<int?>("APP")
                        .HasColumnType("int");

                    b.Property<int?>("APPSEV")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DEL")
                        .HasColumnType("int");

                    b.Property<int?>("DELSEV")
                        .HasColumnType("int");

                    b.Property<int?>("DEPD")
                        .HasColumnType("int");

                    b.Property<int?>("DEPDSEV")
                        .HasColumnType("int");

                    b.Property<int?>("DISN")
                        .HasColumnType("int");

                    b.Property<int?>("DISNSEV")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ELAT")
                        .HasColumnType("int");

                    b.Property<int?>("ELATSEV")
                        .HasColumnType("int");

                    b.Property<int?>("HALL")
                        .HasColumnType("int");

                    b.Property<int?>("HALLSEV")
                        .HasColumnType("int");

                    b.Property<int?>("IRR")
                        .HasColumnType("int");

                    b.Property<int?>("IRRSEV")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MOT")
                        .HasColumnType("int");

                    b.Property<int?>("MOTSEV")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NITE")
                        .HasColumnType("int");

                    b.Property<int?>("NITESEV")
                        .HasColumnType("int");

                    b.Property<int?>("NPIQINF")
                        .HasColumnType("int");

                    b.Property<string>("NPIQINFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B5s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AFRAID")
                        .HasColumnType("int");

                    b.Property<int?>("BETTER")
                        .HasColumnType("int");

                    b.Property<int?>("BORED")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DROPACT")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EMPTY")
                        .HasColumnType("int");

                    b.Property<int?>("ENERGY")
                        .HasColumnType("int");

                    b.Property<int?>("GDS")
                        .HasColumnType("int");

                    b.Property<int?>("HAPPY")
                        .HasColumnType("int");

                    b.Property<int?>("HELPLESS")
                        .HasColumnType("int");

                    b.Property<int?>("HOPELESS")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MEMPROB")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NOGDS")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SATIS")
                        .HasColumnType("int");

                    b.Property<int?>("SPIRITS")
                        .HasColumnType("int");

                    b.Property<int?>("STAYHOME")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<int?>("WONDRFUL")
                        .HasColumnType("int");

                    b.Property<int?>("WRTHLESS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B6s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BILLS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EVENTS")
                        .HasColumnType("int");

                    b.Property<int?>("GAMES")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MEALPREP")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PAYATTN")
                        .HasColumnType("int");

                    b.Property<int?>("REMDATES")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SHOPPING")
                        .HasColumnType("int");

                    b.Property<int?>("STOVE")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TAXES")
                        .HasColumnType("int");

                    b.Property<int?>("TRAVEL")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B7s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ALIENLML")
                        .HasColumnType("int");

                    b.Property<int?>("ALIENLMR")
                        .HasColumnType("int");

                    b.Property<int?>("ALSFIND")
                        .HasColumnType("int");

                    b.Property<int?>("APRAXL")
                        .HasColumnType("int");

                    b.Property<int?>("APRAXR")
                        .HasColumnType("int");

                    b.Property<int?>("APRAXSP")
                        .HasColumnType("int");

                    b.Property<int?>("ATAXL")
                        .HasColumnType("int");

                    b.Property<int?>("ATAXR")
                        .HasColumnType("int");

                    b.Property<int?>("AXIALPSP")
                        .HasColumnType("int");

                    b.Property<int?>("BRADY")
                        .HasColumnType("int");

                    b.Property<int?>("CORTDEF")
                        .HasColumnType("int");

                    b.Property<int?>("CORTSENL")
                        .HasColumnType("int");

                    b.Property<int?>("CORTSENR")
                        .HasColumnType("int");

                    b.Property<int?>("CORTVISL")
                        .HasColumnType("int");

                    b.Property<int?>("CORTVISR")
                        .HasColumnType("int");

                    b.Property<int?>("CVDMOTL")
                        .HasColumnType("int");

                    b.Property<int?>("CVDMOTR")
                        .HasColumnType("int");

                    b.Property<int?>("CVDSIGNS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DYSPSP")
                        .HasColumnType("int");

                    b.Property<int?>("DYSTONL")
                        .HasColumnType("int");

                    b.Property<int?>("DYSTONR")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EYEPSP")
                        .HasColumnType("int");

                    b.Property<int?>("GAITNPH")
                        .HasColumnType("int");

                    b.Property<int?>("GAITPSP")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MYOCLLT")
                        .HasColumnType("int");

                    b.Property<int?>("MYOCLRT")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NORMEXAM")
                        .HasColumnType("int");

                    b.Property<int?>("OTHNEUR")
                        .HasColumnType("int");

                    b.Property<string>("OTHNEURX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PARKGAIT")
                        .HasColumnType("int");

                    b.Property<int?>("PARKSIGN")
                        .HasColumnType("int");

                    b.Property<int?>("POSTCORT")
                        .HasColumnType("int");

                    b.Property<int?>("POSTINST")
                        .HasColumnType("int");

                    b.Property<int?>("PSPCBS")
                        .HasColumnType("int");

                    b.Property<int?>("RESTTRL")
                        .HasColumnType("int");

                    b.Property<int?>("RESTTRR")
                        .HasColumnType("int");

                    b.Property<int?>("RIGIDL")
                        .HasColumnType("int");

                    b.Property<int?>("RIGIDR")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SIVDFIND")
                        .HasColumnType("int");

                    b.Property<int?>("SLOWINGL")
                        .HasColumnType("int");

                    b.Property<int?>("SLOWINGR")
                        .HasColumnType("int");

                    b.Property<int?>("SOMATL")
                        .HasColumnType("int");

                    b.Property<int?>("SOMATR")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B8s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B9", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ALSAGE")
                        .HasColumnType("int");

                    b.Property<int?>("BEAGE")
                        .HasColumnType("int");

                    b.Property<int?>("BEAGIT")
                        .HasColumnType("int");

                    b.Property<int?>("BEAHALL")
                        .HasColumnType("int");

                    b.Property<int?>("BEANX")
                        .HasColumnType("int");

                    b.Property<int?>("BEAPATHY")
                        .HasColumnType("int");

                    b.Property<int?>("BEDEL")
                        .HasColumnType("int");

                    b.Property<int?>("BEDEP")
                        .HasColumnType("int");

                    b.Property<int?>("BEDISIN")
                        .HasColumnType("int");

                    b.Property<int?>("BEFPRED")
                        .HasColumnType("int");

                    b.Property<string>("BEFPREDX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("BEIRRIT")
                        .HasColumnType("int");

                    b.Property<int?>("BEMODE")
                        .HasColumnType("int");

                    b.Property<string>("BEMODEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("BEOTHR")
                        .HasColumnType("int");

                    b.Property<string>("BEOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("BEPERCH")
                        .HasColumnType("int");

                    b.Property<int?>("BEREM")
                        .HasColumnType("int");

                    b.Property<int?>("BEREMAGO")
                        .HasColumnType("int");

                    b.Property<int?>("BEVHAGO")
                        .HasColumnType("int");

                    b.Property<int?>("BEVHALL")
                        .HasColumnType("int");

                    b.Property<int?>("BEVWELL")
                        .HasColumnType("int");

                    b.Property<int?>("COGATTN")
                        .HasColumnType("int");

                    b.Property<int?>("COGFLAGO")
                        .HasColumnType("int");

                    b.Property<int?>("COGFLUC")
                        .HasColumnType("int");

                    b.Property<int?>("COGFPRED")
                        .HasColumnType("int");

                    b.Property<string>("COGFPREX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGJUDG")
                        .HasColumnType("int");

                    b.Property<int?>("COGLANG")
                        .HasColumnType("int");

                    b.Property<int?>("COGMEM")
                        .HasColumnType("int");

                    b.Property<int?>("COGMODE")
                        .HasColumnType("int");

                    b.Property<string>("COGMODEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGORI")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTHR")
                        .HasColumnType("int");

                    b.Property<string>("COGOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGVIS")
                        .HasColumnType("int");

                    b.Property<int?>("COURSE")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DECAGE")
                        .HasColumnType("int");

                    b.Property<int?>("DECCLBE")
                        .HasColumnType("int");

                    b.Property<int?>("DECCLCOG")
                        .HasColumnType("int");

                    b.Property<int?>("DECCLMOT")
                        .HasColumnType("int");

                    b.Property<int?>("DECIN")
                        .HasColumnType("int");

                    b.Property<int?>("DECSUB")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FRSTCHG")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDEVAL")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("LBDEVAL")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MOAGE")
                        .HasColumnType("int");

                    b.Property<int?>("MOFALLS")
                        .HasColumnType("int");

                    b.Property<int?>("MOFRST")
                        .HasColumnType("int");

                    b.Property<int?>("MOGAIT")
                        .HasColumnType("int");

                    b.Property<int?>("MOMOALS")
                        .HasColumnType("int");

                    b.Property<int?>("MOMODE")
                        .HasColumnType("int");

                    b.Property<string>("MOMODEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("MOMOPARK")
                        .HasColumnType("int");

                    b.Property<int?>("MOSLOW")
                        .HasColumnType("int");

                    b.Property<int?>("MOTREM")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PARKAGE")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B9s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANIMALS")
                        .HasColumnType("int");

                    b.Property<int?>("BOSTON")
                        .HasColumnType("int");

                    b.Property<int?>("COGSTAT")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DIGIB")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIBLEN")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIF")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIFLEN")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("LOGIDAY")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIMEM")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIMO")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIPREV")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIYR")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MEMTIME")
                        .HasColumnType("int");

                    b.Property<int?>("MEMUNITS")
                        .HasColumnType("int");

                    b.Property<int?>("MMSE")
                        .HasColumnType("int");

                    b.Property<int?>("MMSECOMP")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("MMSELAN")
                        .HasColumnType("int");

                    b.Property<string>("MMSELANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("MMSELOC")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEORDA")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEORLO")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEREAS")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEVIS")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPSYCLOC")
                        .HasColumnType("int");

                    b.Property<int?>("NPSYLAN")
                        .HasColumnType("int");

                    b.Property<string>("NPSYLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PENTAGON")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TRAILA")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILALI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILARR")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILB")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBLI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBRR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENRS")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTD")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERNF")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTE")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTI")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTN")
                        .HasColumnType("int");

                    b.Property<int?>("VEG")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_C1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANIMALS")
                        .HasColumnType("int");

                    b.Property<int?>("COGSTAT")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTCUE")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDRE")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDTI")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDVR")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTURS")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTVRS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DIGBACCT")
                        .HasColumnType("int");

                    b.Property<int?>("DIGBACLS")
                        .HasColumnType("int");

                    b.Property<int?>("DIGFORCT")
                        .HasColumnType("int");

                    b.Property<int?>("DIGFORSL")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MINTPCNC")
                        .HasColumnType("int");

                    b.Property<int?>("MINTPCNG")
                        .HasColumnType("int");

                    b.Property<int?>("MINTSCNC")
                        .HasColumnType("int");

                    b.Property<int?>("MINTSCNG")
                        .HasColumnType("int");

                    b.Property<int?>("MINTTOTS")
                        .HasColumnType("int");

                    b.Property<int?>("MINTTOTW")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAABST")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLOC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLOH")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLON")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACOMP")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACUBE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCADIGI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAFLUE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCALAN")
                        .HasColumnType("int");

                    b.Property<string>("MOCALANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("MOCALETT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCALOC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCANAMI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORCT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORDT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORDY")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORMO")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORPL")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORYR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREAS")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECN")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREGI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREPE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCASER7")
                        .HasColumnType("int");

                    b.Property<int?>("MOCATOTS")
                        .HasColumnType("int");

                    b.Property<int?>("MOCATRAI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAVIS")
                        .HasColumnType("int");

                    b.Property<int?>("MODCOMM")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPSYCLOC")
                        .HasColumnType("int");

                    b.Property<int?>("NPSYLAN")
                        .HasColumnType("int");

                    b.Property<string>("NPSYLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTRAILA")
                        .HasColumnType("int");

                    b.Property<int?>("OTRAILB")
                        .HasColumnType("int");

                    b.Property<int?>("OTRLALI")
                        .HasColumnType("int");

                    b.Property<int?>("OTRLARR")
                        .HasColumnType("int");

                    b.Property<int?>("OTRLBLI")
                        .HasColumnType("int");

                    b.Property<int?>("OTRLBRR")
                        .HasColumnType("int");

                    b.Property<int?>("RESPASST")
                        .HasColumnType("int");

                    b.Property<int?>("RESPDISN")
                        .HasColumnType("int");

                    b.Property<int?>("RESPDIST")
                        .HasColumnType("int");

                    b.Property<int?>("RESPEMOT")
                        .HasColumnType("int");

                    b.Property<int?>("RESPFATG")
                        .HasColumnType("int");

                    b.Property<int?>("RESPHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("RESPINTR")
                        .HasColumnType("int");

                    b.Property<int?>("RESPOTH")
                        .HasColumnType("int");

                    b.Property<string>("RESPOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RESPVAL")
                        .HasColumnType("int");

                    b.Property<int?>("REY1INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY1REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY2INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY2REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY3INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY3REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY4INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY4REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY5INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY5REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY6INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY6REC")
                        .HasColumnType("int");

                    b.Property<int?>("REYDINT")
                        .HasColumnType("int");

                    b.Property<int?>("REYDREC")
                        .HasColumnType("int");

                    b.Property<int?>("REYFPOS")
                        .HasColumnType("int");

                    b.Property<int?>("REYTCOR")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TRAILA")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILALI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILARR")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILB")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBLI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBRR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENRS")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTD")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERNF")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTE")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTI")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTN")
                        .HasColumnType("int");

                    b.Property<int?>("VEG")
                        .HasColumnType("int");

                    b.Property<int?>("VNTPCNC")
                        .HasColumnType("int");

                    b.Property<int?>("VNTTOTW")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_C2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ADMUT")
                        .HasColumnType("int");

                    b.Property<int?>("ALCABUSE")
                        .HasColumnType("int");

                    b.Property<int?>("ALCDEM")
                        .HasColumnType("int");

                    b.Property<int?>("ALCDEMIF")
                        .HasColumnType("int");

                    b.Property<int?>("ALZDIS")
                        .HasColumnType("int");

                    b.Property<int?>("ALZDISIF")
                        .HasColumnType("int");

                    b.Property<int?>("AMNDEM")
                        .HasColumnType("int");

                    b.Property<int?>("AMYLCSF")
                        .HasColumnType("int");

                    b.Property<int?>("AMYLPET")
                        .HasColumnType("int");

                    b.Property<int?>("ANXIET")
                        .HasColumnType("int");

                    b.Property<int?>("ANXIETIF")
                        .HasColumnType("int");

                    b.Property<int?>("BIPOLDIF")
                        .HasColumnType("int");

                    b.Property<int?>("BIPOLDX")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINCTE")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINJ")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINJIF")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH2")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH2F")
                        .HasColumnType("int");

                    b.Property<string>("COGOTH2X")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGOTH3")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH3F")
                        .HasColumnType("int");

                    b.Property<string>("COGOTH3X")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGOTHIF")
                        .HasColumnType("int");

                    b.Property<string>("COGOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("CORT")
                        .HasColumnType("int");

                    b.Property<int?>("CORTIF")
                        .HasColumnType("int");

                    b.Property<int?>("CSFTAU")
                        .HasColumnType("int");

                    b.Property<int?>("CVD")
                        .HasColumnType("int");

                    b.Property<int?>("CVDIF")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DATSCAN")
                        .HasColumnType("int");

                    b.Property<int?>("DELIR")
                        .HasColumnType("int");

                    b.Property<int?>("DELIRIF")
                        .HasColumnType("int");

                    b.Property<int?>("DEMENTED")
                        .HasColumnType("int");

                    b.Property<int?>("DEP")
                        .HasColumnType("int");

                    b.Property<int?>("DEPIF")
                        .HasColumnType("int");

                    b.Property<int?>("DEPTREAT")
                        .HasColumnType("int");

                    b.Property<int?>("DOWNS")
                        .HasColumnType("int");

                    b.Property<int?>("DOWNSIF")
                        .HasColumnType("int");

                    b.Property<int?>("DXMETHOD")
                        .HasColumnType("int");

                    b.Property<int?>("DYSILL")
                        .HasColumnType("int");

                    b.Property<int?>("DYSILLIF")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EPILEP")
                        .HasColumnType("int");

                    b.Property<int?>("EPILEPIF")
                        .HasColumnType("int");

                    b.Property<int?>("ESSTREIF")
                        .HasColumnType("int");

                    b.Property<int?>("ESSTREM")
                        .HasColumnType("int");

                    b.Property<int?>("FDGAD")
                        .HasColumnType("int");

                    b.Property<int?>("FDGFTLD")
                        .HasColumnType("int");

                    b.Property<int?>("FTDSYN")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMO")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMOIF")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMUT")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDNOIF")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDNOS")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDSUBT")
                        .HasColumnType("int");

                    b.Property<string>("FTLDSUBX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("HIPPATR")
                        .HasColumnType("int");

                    b.Property<int?>("HIV")
                        .HasColumnType("int");

                    b.Property<int?>("HIVIF")
                        .HasColumnType("int");

                    b.Property<int?>("HUNT")
                        .HasColumnType("int");

                    b.Property<int?>("HUNTIF")
                        .HasColumnType("int");

                    b.Property<int?>("HYCEPH")
                        .HasColumnType("int");

                    b.Property<int?>("HYCEPHIF")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGEWMH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGLAC")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGLINF")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMACH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMICH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMWMH")
                        .HasColumnType("int");

                    b.Property<int?>("IMPNOMCI")
                        .HasColumnType("int");

                    b.Property<int?>("IMPSUB")
                        .HasColumnType("int");

                    b.Property<int?>("IMPSUBIF")
                        .HasColumnType("int");

                    b.Property<int?>("INFNETW")
                        .HasColumnType("int");

                    b.Property<int?>("INFWMH")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("LBDIF")
                        .HasColumnType("int");

                    b.Property<int?>("LBDIS")
                        .HasColumnType("int");

                    b.Property<int?>("LBDSYN")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MCIAMEM")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPEX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPLAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPLUS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPVIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1ATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1EX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1LAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1VIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2ATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2EX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2LAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2VIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCINON1")
                        .HasColumnType("int");

                    b.Property<int?>("MCINON2")
                        .HasColumnType("int");

                    b.Property<int?>("MEDS")
                        .HasColumnType("int");

                    b.Property<int?>("MEDSIF")
                        .HasColumnType("int");

                    b.Property<int?>("MRFTLD")
                        .HasColumnType("int");

                    b.Property<int?>("MSA")
                        .HasColumnType("int");

                    b.Property<int?>("MSAIF")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NAMNDEM")
                        .HasColumnType("int");

                    b.Property<int?>("NEOP")
                        .HasColumnType("int");

                    b.Property<int?>("NEOPIF")
                        .HasColumnType("int");

                    b.Property<int?>("NEOPSTAT")
                        .HasColumnType("int");

                    b.Property<int?>("NORMCOG")
                        .HasColumnType("int");

                    b.Property<int?>("OTHBIOM")
                        .HasColumnType("int");

                    b.Property<string>("OTHBIOMX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHCOG")
                        .HasColumnType("int");

                    b.Property<int?>("OTHCOGIF")
                        .HasColumnType("int");

                    b.Property<string>("OTHCOGX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHMUT")
                        .HasColumnType("int");

                    b.Property<string>("OTHMUTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHPSY")
                        .HasColumnType("int");

                    b.Property<int?>("OTHPSYIF")
                        .HasColumnType("int");

                    b.Property<string>("OTHPSYX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PARK")
                        .HasColumnType("int");

                    b.Property<int?>("PCA")
                        .HasColumnType("int");

                    b.Property<int?>("PPASYN")
                        .HasColumnType("int");

                    b.Property<int?>("PPASYNT")
                        .HasColumnType("int");

                    b.Property<int?>("PREVSTK")
                        .HasColumnType("int");

                    b.Property<int?>("PRION")
                        .HasColumnType("int");

                    b.Property<int?>("PRIONIF")
                        .HasColumnType("int");

                    b.Property<int?>("PSP")
                        .HasColumnType("int");

                    b.Property<int?>("PSPIF")
                        .HasColumnType("int");

                    b.Property<int?>("PTSDDX")
                        .HasColumnType("int");

                    b.Property<int?>("PTSDDXIF")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SCHIZOIF")
                        .HasColumnType("int");

                    b.Property<int?>("SCHIZOP")
                        .HasColumnType("int");

                    b.Property<int?>("STKIMAG")
                        .HasColumnType("int");

                    b.Property<int?>("STROKDEC")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TAUPETAD")
                        .HasColumnType("int");

                    b.Property<int?>("TPETFTLD")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_D1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AFIBRILL")
                        .HasColumnType("int");

                    b.Property<int?>("ANGINA")
                        .HasColumnType("int");

                    b.Property<int?>("ANGIOCP")
                        .HasColumnType("int");

                    b.Property<int?>("ANGIOPCI")
                        .HasColumnType("int");

                    b.Property<int?>("ANTIENC")
                        .HasColumnType("int");

                    b.Property<string>("ANTIENCX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ARTH")
                        .HasColumnType("int");

                    b.Property<int?>("ARTLOEX")
                        .HasColumnType("int");

                    b.Property<int?>("ARTSPIN")
                        .HasColumnType("int");

                    b.Property<int?>("ARTUNKN")
                        .HasColumnType("int");

                    b.Property<int?>("ARTUPEX")
                        .HasColumnType("int");

                    b.Property<int?>("ARTYPE")
                        .HasColumnType("int");

                    b.Property<string>("ARTYPEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("BOWLINC")
                        .HasColumnType("int");

                    b.Property<int?>("CANCER")
                        .HasColumnType("int");

                    b.Property<string>("CANCSITE")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("CONGHRT")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DIABET")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HVALVE")
                        .HasColumnType("int");

                    b.Property<int?>("HYPCHOL")
                        .HasColumnType("int");

                    b.Property<int?>("HYPERT")
                        .HasColumnType("int");

                    b.Property<int?>("HYPOSOM")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<int?>("MYOINF")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OTHCOND")
                        .HasColumnType("int");

                    b.Property<string>("OTHCONDX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PACEMAKE")
                        .HasColumnType("int");

                    b.Property<int?>("REMDIS")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<int?>("SLEEPAP")
                        .HasColumnType("int");

                    b.Property<int?>("SLEEPOTH")
                        .HasColumnType("int");

                    b.Property<string>("SLEEPOTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("THYDIS")
                        .HasColumnType("int");

                    b.Property<int?>("URINEINC")
                        .HasColumnType("int");

                    b.Property<int?>("VB12DEF")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_D2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.DrugCodeLookup", b =>
                {
                    b.Property<string>("DrugId")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("BrandName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsOverTheCounter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.HasKey("DrugId");

                    b.ToTable("DrugCodesLookup");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.FormStatus", b =>
                {
                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.Property<string>("Kind")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("VisitId", "Kind");

                    b.ToTable((string)null);

                    b.ToView("vw_FormStatuses", (string)null);
                });

            modelBuilder.Entity("UDS.Net.API.Entities.M1", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormId"));

                    b.Property<int?>("ACONSENT")
                        .HasColumnType("int");

                    b.Property<int?>("AUTOPSY")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEDY")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEMO")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEYR")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DEATHDY")
                        .HasColumnType("int");

                    b.Property<int?>("DEATHMO")
                        .HasColumnType("int");

                    b.Property<int?>("DEATHYR")
                        .HasColumnType("int");

                    b.Property<int?>("DECEASED")
                        .HasColumnType("int");

                    b.Property<int?>("DISCDAY")
                        .HasColumnType("int");

                    b.Property<int?>("DISCMO")
                        .HasColumnType("int");

                    b.Property<int?>("DISCONT")
                        .HasColumnType("int");

                    b.Property<int?>("DISCYR")
                        .HasColumnType("int");

                    b.Property<int?>("DROPREAS")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FTLDDISC")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDREAS")
                        .HasColumnType("int");

                    b.Property<string>("FTLDREAX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NURSEDY")
                        .HasColumnType("int");

                    b.Property<int?>("NURSEMO")
                        .HasColumnType("int");

                    b.Property<int?>("NURSEYR")
                        .HasColumnType("int");

                    b.Property<int?>("PROTOCOL")
                        .HasColumnType("int");

                    b.Property<int>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<int?>("RECOGIM")
                        .HasColumnType("int");

                    b.Property<int?>("REJOIN")
                        .HasColumnType("int");

                    b.Property<int?>("RENAVAIL")
                        .HasColumnType("int");

                    b.Property<int?>("RENURSE")
                        .HasColumnType("int");

                    b.Property<int?>("REPHYILL")
                        .HasColumnType("int");

                    b.Property<int?>("REREFUSE")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FormId");

                    b.HasIndex("ParticipationId");

                    b.ToTable("tbl_M1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParticipationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.T1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TELCOG")
                        .HasColumnType("int");

                    b.Property<int?>("TELCOV")
                        .HasColumnType("int");

                    b.Property<int?>("TELHOME")
                        .HasColumnType("int");

                    b.Property<int?>("TELILL")
                        .HasColumnType("int");

                    b.Property<int?>("TELINPER")
                        .HasColumnType("int");

                    b.Property<int?>("TELMILE")
                        .HasColumnType("int");

                    b.Property<int?>("TELMOD")
                        .HasColumnType("int");

                    b.Property<int?>("TELOTHR")
                        .HasColumnType("int");

                    b.Property<string>("TELOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TELREFU")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_T1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationId", "Number")
                        .IsUnique();

                    b.ToTable("tbl_Visits");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("A1")
                        .HasForeignKey("UDS.Net.API.Entities.A1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("A2")
                        .HasForeignKey("UDS.Net.API.Entities.A2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A3", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("A3")
                        .HasForeignKey("UDS.Net.API.Entities.A3", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID1", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID10", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID11", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID12", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID13", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID14", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID15", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID2", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID3", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID4", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID5", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID6", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID7", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID8", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID9", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB1", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB10", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB11", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB12", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB13", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB14", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB15", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB16", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB17", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB18", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB19", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB2", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB20", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB3", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB4", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB5", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB6", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB7", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB8", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB9", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<int?>("MOB")
                                .HasColumnType("int");

                            b1.Property<int?>("MOE")
                                .HasColumnType("int");

                            b1.Property<int?>("NEU")
                                .HasColumnType("int");

                            b1.Property<int?>("PDX")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.Navigation("KID1")
                        .IsRequired();

                    b.Navigation("KID10")
                        .IsRequired();

                    b.Navigation("KID11")
                        .IsRequired();

                    b.Navigation("KID12")
                        .IsRequired();

                    b.Navigation("KID13")
                        .IsRequired();

                    b.Navigation("KID14")
                        .IsRequired();

                    b.Navigation("KID15")
                        .IsRequired();

                    b.Navigation("KID2")
                        .IsRequired();

                    b.Navigation("KID3")
                        .IsRequired();

                    b.Navigation("KID4")
                        .IsRequired();

                    b.Navigation("KID5")
                        .IsRequired();

                    b.Navigation("KID6")
                        .IsRequired();

                    b.Navigation("KID7")
                        .IsRequired();

                    b.Navigation("KID8")
                        .IsRequired();

                    b.Navigation("KID9")
                        .IsRequired();

                    b.Navigation("SIB1")
                        .IsRequired();

                    b.Navigation("SIB10")
                        .IsRequired();

                    b.Navigation("SIB11")
                        .IsRequired();

                    b.Navigation("SIB12")
                        .IsRequired();

                    b.Navigation("SIB13")
                        .IsRequired();

                    b.Navigation("SIB14")
                        .IsRequired();

                    b.Navigation("SIB15")
                        .IsRequired();

                    b.Navigation("SIB16")
                        .IsRequired();

                    b.Navigation("SIB17")
                        .IsRequired();

                    b.Navigation("SIB18")
                        .IsRequired();

                    b.Navigation("SIB19")
                        .IsRequired();

                    b.Navigation("SIB2")
                        .IsRequired();

                    b.Navigation("SIB20")
                        .IsRequired();

                    b.Navigation("SIB3")
                        .IsRequired();

                    b.Navigation("SIB4")
                        .IsRequired();

                    b.Navigation("SIB5")
                        .IsRequired();

                    b.Navigation("SIB6")
                        .IsRequired();

                    b.Navigation("SIB7")
                        .IsRequired();

                    b.Navigation("SIB8")
                        .IsRequired();

                    b.Navigation("SIB9")
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4D", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                        .WithMany()
                        .HasForeignKey("DRUGID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithMany("A4Ds")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DrugCode");

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4G", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("A4G")
                        .HasForeignKey("UDS.Net.API.Entities.A4G", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A5", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("A5")
                        .HasForeignKey("UDS.Net.API.Entities.A5", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B1")
                        .HasForeignKey("UDS.Net.API.Entities.B1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B4", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B4")
                        .HasForeignKey("UDS.Net.API.Entities.B4", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B5", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B5")
                        .HasForeignKey("UDS.Net.API.Entities.B5", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B6", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B6")
                        .HasForeignKey("UDS.Net.API.Entities.B6", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B7", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B7")
                        .HasForeignKey("UDS.Net.API.Entities.B7", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B8", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B8")
                        .HasForeignKey("UDS.Net.API.Entities.B8", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B9", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("B9")
                        .HasForeignKey("UDS.Net.API.Entities.B9", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("C1")
                        .HasForeignKey("UDS.Net.API.Entities.C1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("C2")
                        .HasForeignKey("UDS.Net.API.Entities.C2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("D1")
                        .HasForeignKey("UDS.Net.API.Entities.D1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("D2")
                        .HasForeignKey("UDS.Net.API.Entities.D2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.FormStatus", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithMany("FormStatuses")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.M1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Participation", "Participation")
                        .WithMany("M1s")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.T1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", "Visit")
                        .WithOne("T1")
                        .HasForeignKey("UDS.Net.API.Entities.T1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Visit");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Participation", "Participation")
                        .WithMany("Visits")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Participation", b =>
                {
                    b.Navigation("M1s");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.Navigation("A1")
                        .IsRequired();

                    b.Navigation("A2")
                        .IsRequired();

                    b.Navigation("A3")
                        .IsRequired();

                    b.Navigation("A4Ds");

                    b.Navigation("A4G")
                        .IsRequired();

                    b.Navigation("A5")
                        .IsRequired();

                    b.Navigation("B1")
                        .IsRequired();

                    b.Navigation("B4")
                        .IsRequired();

                    b.Navigation("B5")
                        .IsRequired();

                    b.Navigation("B6")
                        .IsRequired();

                    b.Navigation("B7")
                        .IsRequired();

                    b.Navigation("B8")
                        .IsRequired();

                    b.Navigation("B9")
                        .IsRequired();

                    b.Navigation("C1")
                        .IsRequired();

                    b.Navigation("C2")
                        .IsRequired();

                    b.Navigation("D1")
                        .IsRequired();

                    b.Navigation("D2")
                        .IsRequired();

                    b.Navigation("FormStatuses");

                    b.Navigation("T1");
                });
#pragma warning restore 612, 618
        }
    }
}
