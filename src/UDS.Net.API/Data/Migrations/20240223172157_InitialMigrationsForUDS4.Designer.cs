// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UDS.Net.API.Data;

#nullable disable

namespace UDS.Net.API.Data.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20240223172157_InitialMigrationsForUDS4")]
    partial class InitialMigrationsForUDS4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UDS.Net.API.Entities.A1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ADINAT")
                        .HasColumnType("int");

                    b.Property<int?>("ADISTATE")
                        .HasColumnType("int");

                    b.Property<int?>("BIRTHMO")
                        .HasColumnType("int");

                    b.Property<int?>("BIRTHSEX")
                        .HasColumnType("int");

                    b.Property<int?>("BIRTHYR")
                        .HasColumnType("int");

                    b.Property<string>("CHLDHDCTRY")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EDUC")
                        .HasColumnType("int");

                    b.Property<int?>("ETHAFAMER")
                        .HasColumnType("int");

                    b.Property<int?>("ETHASNOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHASNOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ETHBLKOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHBLKOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ETHCHAMOR")
                        .HasColumnType("int");

                    b.Property<int?>("ETHCHINESE")
                        .HasColumnType("int");

                    b.Property<int?>("ETHCOLOM")
                        .HasColumnType("int");

                    b.Property<int?>("ETHCUBAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHDOMIN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHEGYPT")
                        .HasColumnType("int");

                    b.Property<int?>("ETHENGLISH")
                        .HasColumnType("int");

                    b.Property<int?>("ETHETHIOP")
                        .HasColumnType("int");

                    b.Property<int?>("ETHFIJIAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHFILIP")
                        .HasColumnType("int");

                    b.Property<int?>("ETHFRENCH")
                        .HasColumnType("int");

                    b.Property<int?>("ETHGERMAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHHAITIAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHHAWAII")
                        .HasColumnType("int");

                    b.Property<int?>("ETHHISOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHHISOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ETHINDIA")
                        .HasColumnType("int");

                    b.Property<int?>("ETHIRAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHIRISH")
                        .HasColumnType("int");

                    b.Property<int?>("ETHISPANIC")
                        .HasColumnType("int");

                    b.Property<int?>("ETHISRAEL")
                        .HasColumnType("int");

                    b.Property<int?>("ETHITALIAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHJAMAICA")
                        .HasColumnType("int");

                    b.Property<int?>("ETHJAPAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHKOREAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHLEBANON")
                        .HasColumnType("int");

                    b.Property<int?>("ETHMARSHAL")
                        .HasColumnType("int");

                    b.Property<int?>("ETHMENAOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHMENAOTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ETHMEXICAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHMOROCCO")
                        .HasColumnType("int");

                    b.Property<int?>("ETHNHPIOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHNHPIOTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ETHNIGERIA")
                        .HasColumnType("int");

                    b.Property<int?>("ETHPOLISH")
                        .HasColumnType("int");

                    b.Property<int?>("ETHPUERTO")
                        .HasColumnType("int");

                    b.Property<int?>("ETHSALVA")
                        .HasColumnType("int");

                    b.Property<int?>("ETHSAMOAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHSOMALI")
                        .HasColumnType("int");

                    b.Property<int?>("ETHSYRIA")
                        .HasColumnType("int");

                    b.Property<int?>("ETHTONGAN")
                        .HasColumnType("int");

                    b.Property<int?>("ETHVIETNAM")
                        .HasColumnType("int");

                    b.Property<int?>("ETHWHIOTH")
                        .HasColumnType("int");

                    b.Property<string>("ETHWHIOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("EXRTIME")
                        .HasColumnType("int");

                    b.Property<int?>("GENDKN")
                        .HasColumnType("int");

                    b.Property<int?>("GENMAN")
                        .HasColumnType("int");

                    b.Property<int?>("GENNOANS")
                        .HasColumnType("int");

                    b.Property<int?>("GENNONBI")
                        .HasColumnType("int");

                    b.Property<int?>("GENOTH")
                        .HasColumnType("int");

                    b.Property<string>("GENOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("GENTRMAN")
                        .HasColumnType("int");

                    b.Property<int?>("GENTRWOMAN")
                        .HasColumnType("int");

                    b.Property<int?>("GENTWOSPIR")
                        .HasColumnType("int");

                    b.Property<int?>("GENWOMAN")
                        .HasColumnType("int");

                    b.Property<int?>("HANDED")
                        .HasColumnType("int");

                    b.Property<int?>("INTERSEX")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LIVSITUA")
                        .HasColumnType("int");

                    b.Property<int?>("LVLEDUC")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MARISTAT")
                        .HasColumnType("int");

                    b.Property<int?>("MEDVA")
                        .HasColumnType("int");

                    b.Property<int?>("MEMTEN")
                        .HasColumnType("int");

                    b.Property<int?>("MEMTROUB")
                        .HasColumnType("int");

                    b.Property<int?>("MEMWORS")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PREDOMLAN")
                        .HasColumnType("int");

                    b.Property<string>("PREDOMLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PRIOCC")
                        .HasColumnType("int");

                    b.Property<int?>("RACEAIAN")
                        .HasColumnType("int");

                    b.Property<string>("RACEAIANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RACEASIAN")
                        .HasColumnType("int");

                    b.Property<int?>("RACEBLACK")
                        .HasColumnType("int");

                    b.Property<int?>("RACEMENA")
                        .HasColumnType("int");

                    b.Property<int?>("RACENHPI")
                        .HasColumnType("int");

                    b.Property<int?>("RACEUNKN")
                        .HasColumnType("int");

                    b.Property<int?>("RACEWHITE")
                        .HasColumnType("int");

                    b.Property<string>("REFCTRREGX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("REFCTRSOCX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("REFERSC")
                        .HasColumnType("int");

                    b.Property<string>("REFERSCX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("REFLEARNED")
                        .HasColumnType("int");

                    b.Property<string>("REFOTHMEDX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("REFOTHREGX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("REFOTHWEBX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("REFOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RESIDENC")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SERVED")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNBI")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNDNK")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNGAY")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNHET")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNNOAN")
                        .HasColumnType("int");

                    b.Property<int?>("SEXORNOTH")
                        .HasColumnType("int");

                    b.Property<string>("SEXORNOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("SEXORNTWOS")
                        .HasColumnType("int");

                    b.Property<int?>("SOURCENW")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("ZIP")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A1a", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ABANDONED")
                        .HasColumnType("int")
                        .HasComment("21. I often feel abandoned");

                    b.Property<int?>("ACTAFRAID")
                        .HasColumnType("int")
                        .HasComment("36. In your day-to-day life how often do people act as if they are afraid of you?");

                    b.Property<int?>("BILLPAY")
                        .HasColumnType("int")
                        .HasComment("9. How difficult is it for you to meet monthly payments on your bills?");

                    b.Property<int?>("CHILDCOMM")
                        .HasColumnType("int")
                        .HasComment("24. If you have children, how often do you have contact with your children (including child[ren]-in-law and stepchild[ren]) either in person, by phone, mail, or email (e.g., any online interaction)?");

                    b.Property<int?>("CLOSEFRND")
                        .HasColumnType("int")
                        .HasComment("22. I miss having a really good friend");

                    b.Property<int?>("COMPCOMM")
                        .HasColumnType("int")
                        .HasComment("15a. Where would you place yourself on this ladder compared to others in your community (or neighborhood)? Please mark the number where you would place yourself.");

                    b.Property<int?>("COMPUSA")
                        .HasColumnType("int")
                        .HasComment("15b. Where would you place yourself on this ladder compared to others in the U.S.?");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DELAYMED")
                        .HasColumnType("int")
                        .HasComment("28. In the past year, how often did you delay seeking medical attention for a problem that was bothering you?");

                    b.Property<int?>("DOCADVICE")
                        .HasColumnType("int")
                        .HasComment("31. In the past year, how often did you follow a doctor's advice or treatment plan when it was given?");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EATLESS")
                        .HasColumnType("int")
                        .HasComment("11. At any time, did you ever eat less than you felt you should because there wasn't enough money to buy food?");

                    b.Property<int?>("EATLESSYR")
                        .HasColumnType("int")
                        .HasComment("12. In the last 12 months, did you ever eat less than you felt you should because there wasn't enough money to buy food?");

                    b.Property<int?>("EMPTINESS")
                        .HasColumnType("int")
                        .HasComment("18. I experience a general sense of emptiness");

                    b.Property<bool?>("EXPAGE")
                        .HasColumnType("bit")
                        .HasComment("39a4. Main reason--Your age");

                    b.Property<bool?>("EXPANCEST")
                        .HasColumnType("bit")
                        .HasComment("39a1. Main reason--Your Ancestry or National Origins");

                    b.Property<bool?>("EXPAPPEAR")
                        .HasColumnType("bit")
                        .HasComment("39a8. Main reason--Some other aspect of your physical appearance");

                    b.Property<bool?>("EXPDISAB")
                        .HasColumnType("bit")
                        .HasComment("39a11. Main reason--A physical disability");

                    b.Property<bool?>("EXPEDUCINC")
                        .HasColumnType("bit")
                        .HasComment("39a10. Main reason--Your education or income level");

                    b.Property<bool?>("EXPGENDER")
                        .HasColumnType("bit")
                        .HasComment("39a2. Main reason--Your gender");

                    b.Property<bool?>("EXPHEIGHT")
                        .HasColumnType("bit")
                        .HasComment("39a6. Main reason--Your height");

                    b.Property<bool?>("EXPNOANS")
                        .HasColumnType("bit")
                        .HasComment("39a15. Main reason--Prefer not to answer");

                    b.Property<bool?>("EXPNOTAPP")
                        .HasColumnType("bit")
                        .HasComment("39a14. Main reason -- not applicable - I do not have these experiences in my day to day life");

                    b.Property<bool?>("EXPOTHER")
                        .HasColumnType("bit")
                        .HasComment("39a13. Main reason -- Other");

                    b.Property<bool?>("EXPRACE")
                        .HasColumnType("bit")
                        .HasComment("39a3. Main reason--Your race");

                    b.Property<bool?>("EXPRELIG")
                        .HasColumnType("bit")
                        .HasComment("39a5. Main reason--Your religion");

                    b.Property<bool?>("EXPSEXORN")
                        .HasColumnType("bit")
                        .HasComment("39a9. Main reason--Your sexual orientation");

                    b.Property<bool?>("EXPSKIN")
                        .HasColumnType("bit")
                        .HasComment("39a12. Main reason--Your shade of skin color");

                    b.Property<int?>("EXPSTRS")
                        .HasColumnType("int")
                        .HasComment("40. When you have had day-to-day experiences like those in questions 33 to 38, would you say they have been very stressful, moderately stressful, or not stressful?");

                    b.Property<bool?>("EXPWEIGHT")
                        .HasColumnType("bit")
                        .HasComment("39a7. Main reason--Your weight");

                    b.Property<int?>("FAMCOMP")
                        .HasColumnType("int")
                        .HasComment("15c. Thinking of your childhood, where would your family have been placed on this ladder compared to others in your community (or neighborhood)?");

                    b.Property<int?>("FINSATIS")
                        .HasColumnType("int")
                        .HasComment("8. How satisfied are you with your current personal financial condition?");

                    b.Property<int?>("FINUPSET")
                        .HasColumnType("int")
                        .HasComment("10. If you have had financial problems that lasted twelve months or longer, how upsetting has it been to you?");

                    b.Property<int?>("FRIENDCOMM")
                        .HasColumnType("int")
                        .HasComment("25. How often do you have contact with close friends either in person, by phone, mail, or email (e.g., any online interaction)?");

                    b.Property<int?>("FRIENDS")
                        .HasColumnType("int")
                        .HasComment("20. I feel like I don't have enough friends");

                    b.Property<int?>("GUARD2EDU")
                        .HasColumnType("int")
                        .HasComment("17. If there was a second person who raised you (e.g., your mother, father, grandmother, etc.?), what was that person's highest level of education completed?");

                    b.Property<int?>("GUARD2REL")
                        .HasColumnType("int")
                        .HasComment("17a. What was this second person's relationship to you (if applicable)?");

                    b.Property<string>("GUARD2RELX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("17a1. Specify other relationship");

                    b.Property<int?>("GUARDEDU")
                        .HasColumnType("int")
                        .HasComment("16. Thinking of the person who raised you, what was their highest level of education completed?");

                    b.Property<int?>("GUARDREL")
                        .HasColumnType("int")
                        .HasComment("16a. What was this person's relationship to you?");

                    b.Property<string>("GUARDRELX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("16a1. Specify other relationship");

                    b.Property<int?>("HEALTHACC")
                        .HasColumnType("int")
                        .HasComment("32. Overall, which of these describes your health insurance, access to healthcare services, and access to medications?");

                    b.Property<int?>("INCOMEYR")
                        .HasColumnType("int")
                        .HasComment("7. Which of these income groups represents your household income for the past year? Include income from all sources such as wages, salaries, social security or retirement benefits, help from relatives, rent from property, and so forth.");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LESSCOURT")
                        .HasColumnType("int")
                        .HasComment("33. In your day-to-day life how often are you treated with less courtesy or respect than other people?");

                    b.Property<int?>("LESSMEDS")
                        .HasColumnType("int")
                        .HasComment("13. At any time, have you ended up taking less medication than was prescribed for you because of the cost?");

                    b.Property<int?>("LESSMEDSYR")
                        .HasColumnType("int")
                        .HasComment("14. In the last 12 months, have you ended up taking less medication than was prescribed for you because of the cost?");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MISSEDFUP")
                        .HasColumnType("int")
                        .HasComment("30. In the past year, how often did you miss a follow-up medical appointment that was scheduled?");

                    b.Property<int?>("MISSPEOPLE")
                        .HasColumnType("int")
                        .HasComment("19. I miss having people around");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NOTSMART")
                        .HasColumnType("int")
                        .HasComment("35. In your day-to-day life how often do people act as if they think you are not smart?");

                    b.Property<int?>("OWNSCAR")
                        .HasColumnType("int")
                        .HasComment("1. Do you or someone in your household currently own a car?");

                    b.Property<int?>("PARENTCOMM")
                        .HasColumnType("int")
                        .HasComment("23. If your parents are still alive, how often do you have contact with them (including mother, father, mother-in-law, and father-in-law) either in person, by phone, mail, or email (e.g., any online interaction)?");

                    b.Property<int?>("PARTICIPATE")
                        .HasColumnType("int")
                        .HasComment("26. How often do you participate in activities outside the home (e.g., religious activities, educational activities, volunteer work, paid work, or activities with groups or organizations)?");

                    b.Property<int?>("POORMEDTRT")
                        .HasColumnType("int")
                        .HasComment("38. How frequently did you receive poorer service or treatment from doctors or in hospitals compared to other people?");

                    b.Property<int?>("POORSERV")
                        .HasColumnType("int")
                        .HasComment("34. In your day-to-day life how often do you receive poorer service than other people at restaurants or stores?");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SAFECOMM")
                        .HasColumnType("int")
                        .HasComment("27b. How safe do you feel in your community (or neighborhood)?");

                    b.Property<int?>("SAFEHOME")
                        .HasColumnType("int")
                        .HasComment("27a. How safe do you feel in your home?");

                    b.Property<int?>("SCRIPTPROB")
                        .HasColumnType("int")
                        .HasComment("29. In the past year, how often did you experience challenges in filling a prescription?");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("THREATENED")
                        .HasColumnType("int")
                        .HasComment("37. In your day-to-day life how often are you threatened or harassed?");

                    b.Property<int?>("TRANSPROB")
                        .HasColumnType("int")
                        .HasComment("3. In the past 30 days, how often were you not able to leave the house when you wanted to because of a problem with transportation?");

                    b.Property<int?>("TRANSWORRY")
                        .HasColumnType("int")
                        .HasComment("4. In the past 30 days, how often did you worry about whether or not you would be able to get somewhere because of a problem with transportation?");

                    b.Property<int?>("TRSPACCESS")
                        .HasColumnType("int")
                        .HasComment("2. Do you have consistent access to transportation?");

                    b.Property<int?>("TRSPLONGER")
                        .HasColumnType("int")
                        .HasComment("5. In the past 30 days, how often did it take you longer to get somewhere than it would have taken you if you had different transportation?");

                    b.Property<int?>("TRSPMED")
                        .HasColumnType("int")
                        .HasComment("6. In the past 30 days, how often has a lack of transportation kept you from medical appointments or from doing things needed for daily living?");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A1as");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("INCNTFRQ")
                        .HasColumnType("int");

                    b.Property<string>("INCNTMDX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("INCNTMOD")
                        .HasColumnType("int");

                    b.Property<int?>("INCNTTIM")
                        .HasColumnType("int");

                    b.Property<int?>("INKNOWN")
                        .HasColumnType("int");

                    b.Property<int?>("INLIVWTH")
                        .HasColumnType("int");

                    b.Property<int?>("INMEMTEN")
                        .HasColumnType("int");

                    b.Property<int?>("INMEMTROUB")
                        .HasColumnType("int");

                    b.Property<int?>("INMEMWORS")
                        .HasColumnType("int");

                    b.Property<int?>("INRELTO")
                        .HasColumnType("int");

                    b.Property<int?>("INRELY")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NEWINF")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AFFFAMM")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DADAGEO")
                        .HasColumnType("int");

                    b.Property<int?>("DADDAGE")
                        .HasColumnType("int");

                    b.Property<int?>("DADETPR")
                        .HasColumnType("int");

                    b.Property<int?>("DADETSEC")
                        .HasColumnType("int");

                    b.Property<int?>("DADMEVAL")
                        .HasColumnType("int");

                    b.Property<int?>("DADYOB")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("KIDS")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MOMAGEO")
                        .HasColumnType("int");

                    b.Property<int?>("MOMDAGE")
                        .HasColumnType("int");

                    b.Property<int?>("MOMETPR")
                        .HasColumnType("int");

                    b.Property<int?>("MOMETSEC")
                        .HasColumnType("int");

                    b.Property<int?>("MOMMEVAL")
                        .HasColumnType("int");

                    b.Property<int?>("MOMYOB")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NWINFKID")
                        .HasColumnType("int");

                    b.Property<int?>("NWINFMUT")
                        .HasColumnType("int");

                    b.Property<int?>("NWINFSIB")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SIBS")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A3s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANYMEDS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A4s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4a", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ADVERSEOTH")
                        .HasColumnType("bit");

                    b.Property<string>("ADVERSEOTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ADVEVENT")
                        .HasColumnType("int");

                    b.Property<bool?>("ARIAE")
                        .HasColumnType("bit");

                    b.Property<bool?>("ARIAH")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TRTBIOMARK")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A4as");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A5D2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ALCBINGE")
                        .HasColumnType("int")
                        .HasComment("In the past 12 months, how often did the participant have six or more drinks containing alcohol in one day?");

                    b.Property<int?>("ALCDRINKS")
                        .HasColumnType("int")
                        .HasComment("On a day when the participant drinks alcoholic beverages, how many standard drinks does the participant typically consume?");

                    b.Property<int?>("ALCFREQYR")
                        .HasColumnType("int")
                        .HasComment("In the past 12 months, how often has the participant had a drink containing alcohol?");

                    b.Property<int?>("ANGIOCP")
                        .HasColumnType("int")
                        .HasComment("Carotid artery surgery or stenting?");

                    b.Property<int?>("ANXIETY")
                        .HasColumnType("int")
                        .HasComment("Anxiety disorder (DSM-5-TR criteria)");

                    b.Property<int?>("APNEA")
                        .HasColumnType("int")
                        .HasComment("Sleep apnea");

                    b.Property<int?>("APNEAORAL")
                        .HasColumnType("int")
                        .HasComment("Typical use of an oral device for sleep apnea at night over the past 12 months?");

                    b.Property<bool?>("ARTHLOEX")
                        .HasColumnType("bit")
                        .HasComment("Lower extremity affected by arthritis");

                    b.Property<int?>("ARTHRIT")
                        .HasColumnType("int")
                        .HasComment("Arthritis");

                    b.Property<bool?>("ARTHROSTEO")
                        .HasColumnType("bit")
                        .HasComment("Type of arthritis: Osteoarthritis");

                    b.Property<bool?>("ARTHROTHR")
                        .HasColumnType("bit")
                        .HasComment("Type of arthritis: Other");

                    b.Property<bool?>("ARTHRRHEUM")
                        .HasColumnType("bit")
                        .HasComment("Type of arthritis: Rheumatoid");

                    b.Property<bool?>("ARTHSPIN")
                        .HasColumnType("bit")
                        .HasComment("Spine affected by arthritis");

                    b.Property<bool?>("ARTHTYPUNK")
                        .HasColumnType("bit")
                        .HasComment("Type of arthritis: Unknown");

                    b.Property<string>("ARTHTYPX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other type of arthritis");

                    b.Property<bool?>("ARTHUNK")
                        .HasColumnType("bit")
                        .HasComment("Region affected by arthritis unknown");

                    b.Property<bool?>("ARTHUPEX")
                        .HasColumnType("bit")
                        .HasComment("Upper extremity affected by arthritis");

                    b.Property<int?>("B12DEF")
                        .HasColumnType("int")
                        .HasComment("B12 deficiency");

                    b.Property<int?>("BCENDAGE")
                        .HasColumnType("int")
                        .HasComment("Age at last use of birth control pills");

                    b.Property<int?>("BCPILLS")
                        .HasColumnType("int")
                        .HasComment("Has the participant ever taken birth control pills?");

                    b.Property<int?>("BCPILLSYR")
                        .HasColumnType("int")
                        .HasComment("Total number of years participant has taken birth control pills");

                    b.Property<int?>("BCSTARTAGE")
                        .HasColumnType("int")
                        .HasComment("Age at first use of birth control pills");

                    b.Property<int?>("BIPOLAR")
                        .HasColumnType("int")
                        .HasComment("Bipolar disorder(DSM - 5 - TR criteria)");

                    b.Property<int?>("BYPASSAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent coronary artery bypass surgery");

                    b.Property<bool?>("CANCBLOOD")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Blood");

                    b.Property<bool?>("CANCBONE")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Bone marrow transplant");

                    b.Property<bool?>("CANCBREAST")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Breast");

                    b.Property<bool?>("CANCCHEMO")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Chemotherapy");

                    b.Property<bool?>("CANCCOLON")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Colon");

                    b.Property<int?>("CANCER")
                        .HasColumnType("int")
                        .HasComment("Cancer, primary or metastatic (Report all known diagnoses. Exclude non-melanoma skin cancer.)");

                    b.Property<int?>("CANCERAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent cancer diagnosis");

                    b.Property<bool?>("CANCERMETA")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer: Metastatic");

                    b.Property<bool?>("CANCERPRIM")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer: Primary/non-metastatic");

                    b.Property<bool?>("CANCERUNK")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer: Unknown");

                    b.Property<bool?>("CANCHORM")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Hormone therapy");

                    b.Property<bool?>("CANCIMMUNO")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Immunotherapy");

                    b.Property<bool?>("CANCLUNG")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Lung");

                    b.Property<bool?>("CANCMETBR")
                        .HasColumnType("bit")
                        .HasComment("Type of metastatic cancer: Metatstic to brain");

                    b.Property<bool?>("CANCMETOTH")
                        .HasColumnType("bit")
                        .HasComment("Type of metastatic cancer: Metastatic to sites other than brain");

                    b.Property<bool?>("CANCOTHER")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Other");

                    b.Property<string>("CANCOTHERX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Specify other primary site of cancer");

                    b.Property<bool?>("CANCPROST")
                        .HasColumnType("bit")
                        .HasComment("Primary site of cancer: Prostate");

                    b.Property<bool?>("CANCRAD")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Radiation");

                    b.Property<bool?>("CANCRESECT")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Surgical resection");

                    b.Property<bool?>("CANCTROTH")
                        .HasColumnType("bit")
                        .HasComment("Type of cancer treatment: Other");

                    b.Property<string>("CANCTROTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other type of cancer treatment");

                    b.Property<int?>("CANNABIS")
                        .HasColumnType("int")
                        .HasComment("In the past 12 months, how often has the participant consumed cannabis (edibles, smoked, or vaporized)?");

                    b.Property<int?>("CARDARRAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent cardiac arrest");

                    b.Property<int?>("CARDARREST")
                        .HasColumnType("int")
                        .HasComment("Cardiac arrest (heart stopped)");

                    b.Property<int?>("CAROTIDAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent carotid artery surgery or stenting");

                    b.Property<int?>("CBSTROKE")
                        .HasColumnType("int")
                        .HasComment("Stroke by history, not exam (imaging is not required)");

                    b.Property<int?>("CBTIA")
                        .HasColumnType("int")
                        .HasComment("Transient ischemic attack (TIA)");

                    b.Property<int?>("COVID19")
                        .HasColumnType("int")
                        .HasComment("COVID-19 infection");

                    b.Property<int?>("COVIDHOSP")
                        .HasColumnType("int")
                        .HasComment("COVID-19 infection requiring hospitalization?");

                    b.Property<int?>("CPAP")
                        .HasColumnType("int")
                        .HasComment("Typical use of breathing machine (e.g. CPAP) at night over the past 12 months");

                    b.Property<int?>("CVAFIB")
                        .HasColumnType("int")
                        .HasComment("Atrial fibrillation");

                    b.Property<int?>("CVANGIO")
                        .HasColumnType("int")
                        .HasComment("Coronary artery angioplasty / endarterectomy / stenting");

                    b.Property<int?>("CVBYPASS")
                        .HasColumnType("int")
                        .HasComment("Coronary artery bypass procedure");

                    b.Property<int?>("CVCHF")
                        .HasColumnType("int")
                        .HasComment("Congestive heart failure (including pulmonary edema)");

                    b.Property<int?>("CVHVALVE")
                        .HasColumnType("int")
                        .HasComment("Heart valve replacement or repair");

                    b.Property<int?>("CVOTHR")
                        .HasColumnType("int")
                        .HasComment("Other cardiovascular disease");

                    b.Property<string>("CVOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other cardiovascular disease");

                    b.Property<int?>("CVPACDEF")
                        .HasColumnType("int")
                        .HasComment("Pacemaker and/or defibrillator implantation");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("DEPRTREAT")
                        .HasColumnType("bit")
                        .HasComment("Choose if treated or untreated");

                    b.Property<int?>("DIABAGE")
                        .HasColumnType("int")
                        .HasComment("Age at diabetes diagnosis");

                    b.Property<bool?>("DIABDIET")
                        .HasColumnType("bit")
                        .HasComment("Diabetes treated with: Diet");

                    b.Property<int?>("DIABETES")
                        .HasColumnType("int")
                        .HasComment("Diabetes");

                    b.Property<bool?>("DIABINS")
                        .HasColumnType("bit")
                        .HasComment("Diabetes treated with: Insulin");

                    b.Property<bool?>("DIABMEDS")
                        .HasColumnType("bit")
                        .HasComment("Diabetes treated with: Oral medications");

                    b.Property<int?>("DIABTYPE")
                        .HasColumnType("int")
                        .HasComment("Diabetes type");

                    b.Property<bool?>("DIABUNK")
                        .HasColumnType("bit")
                        .HasComment("Diabetes treated with: Unknown");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FIRSTTBI")
                        .HasColumnType("int")
                        .HasComment("Age of first head injury");

                    b.Property<int?>("GENERALANX")
                        .HasColumnType("int")
                        .HasComment("Generalized Anxiety Disorder");

                    b.Property<int?>("HEADACHE")
                        .HasColumnType("int")
                        .HasComment("Chronic headaches");

                    b.Property<int?>("HEADIMP")
                        .HasColumnType("int")
                        .HasComment("epetitive head impacts (e.g. from contact sports, intimate partner violence, or military duty), regardless of whether it caused symptoms.");

                    b.Property<int?>("HEADINJCON")
                        .HasColumnType("int")
                        .HasComment("After a head injury, what was the longest period...");

                    b.Property<int?>("HEADINJNUM")
                        .HasColumnType("int")
                        .HasComment("Total number of head injuries");

                    b.Property<int?>("HEADINJUNC")
                        .HasColumnType("int")
                        .HasComment("After a head injury, what was the longest period of time that the participant was unconscious?");

                    b.Property<int?>("HEADINJURY")
                        .HasColumnType("int")
                        .HasComment("Head injury (e.g. in a vehicle accident, being hit by an object...)");

                    b.Property<int?>("HIVAGE")
                        .HasColumnType("int")
                        .HasComment("Age at HIV diagnosis");

                    b.Property<int?>("HIVDIAG")
                        .HasColumnType("int")
                        .HasComment("Human Immunodeficiency Virus");

                    b.Property<int?>("HRT")
                        .HasColumnType("int")
                        .HasComment("Has the participant taken female hormone replacement pills or patches (e.g. estrogen)?");

                    b.Property<int?>("HRTATTACK")
                        .HasColumnType("int")
                        .HasComment("Heart attack (heart artery blockage)");

                    b.Property<int?>("HRTATTAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent heart attack");

                    b.Property<int?>("HRTATTMULT")
                        .HasColumnType("int")
                        .HasComment("More than one heart attack?");

                    b.Property<int?>("HRTENDAGE")
                        .HasColumnType("int")
                        .HasComment("Age at last use of female hormone replacement pills");

                    b.Property<int?>("HRTSTRTAGE")
                        .HasColumnType("int")
                        .HasComment("Age at first use of female hormone replacement pills");

                    b.Property<int?>("HRTYEARS")
                        .HasColumnType("int")
                        .HasComment("Total number of years participant has taken female hormone replacement pills");

                    b.Property<int?>("HYDROCEPH")
                        .HasColumnType("int")
                        .HasComment("Normal-pressure hydrocephalus");

                    b.Property<int?>("HYPERCHAGE")
                        .HasColumnType("int")
                        .HasComment("Age at hypercholesterolemia diagnosis");

                    b.Property<int?>("HYPERCHO")
                        .HasColumnType("int")
                        .HasComment("Hypercholesterolemia (or taking medication for high cholesterol)");

                    b.Property<int?>("HYPERTAGE")
                        .HasColumnType("int")
                        .HasComment("Age at hypertension diagnosis");

                    b.Property<int?>("HYPERTEN")
                        .HasColumnType("int")
                        .HasComment("Hypertension (or taking medication for hypertension)");

                    b.Property<bool?>("IMPAMFOOT")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: American football");

                    b.Property<bool?>("IMPASSAULT")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Physical assault");

                    b.Property<bool?>("IMPBOXING")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Boxing or mixed martial arts");

                    b.Property<bool?>("IMPHOCKEY")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Ice hockey");

                    b.Property<bool?>("IMPIPV")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Intimate partner violence");

                    b.Property<bool?>("IMPMILIT")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Military service");

                    b.Property<bool?>("IMPOTHER")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Other cause");

                    b.Property<string>("IMPOTHERX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other source of exposure for repeated hits to the head");

                    b.Property<bool?>("IMPSOCCER")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Soccer");

                    b.Property<bool?>("IMPSPORT")
                        .HasColumnType("bit")
                        .HasComment("Source of exposure for repeated hits to the head: Other contact sport");

                    b.Property<int?>("IMPYEARS")
                        .HasColumnType("int")
                        .HasComment("The total length of time in years that the participant was exposed to repeated hits to the head (e.g. playing American football for 7 years)");

                    b.Property<int?>("INCONTF")
                        .HasColumnType("int")
                        .HasComment("Incontinence—bowel (occurring at least weekly)");

                    b.Property<int?>("INCONTU")
                        .HasColumnType("int")
                        .HasComment("Incontinence—urinary (occurring at least weekly)");

                    b.Property<int?>("INSOMN")
                        .HasColumnType("int")
                        .HasComment("Hyposomnia/Insomnia (occurring at least weekly or requiring medication)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("KIDNEY")
                        .HasColumnType("int")
                        .HasComment("Chronic kidney disease");

                    b.Property<int?>("KIDNEYAGE")
                        .HasColumnType("int")
                        .HasComment("Age at chronic kidney disease diagnosis");

                    b.Property<int?>("LASTTBI")
                        .HasColumnType("int")
                        .HasComment("Age of most recent head injury");

                    b.Property<int?>("LIVER")
                        .HasColumnType("int")
                        .HasComment("Liver disease");

                    b.Property<int?>("LIVERAGE")
                        .HasColumnType("int")
                        .HasComment("Age at liver disease diagnosis");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MAJORDEP")
                        .HasColumnType("int")
                        .HasComment("Major depressive disorder (DSM-5-TR criteria)");

                    b.Property<int?>("MENARCHE")
                        .HasColumnType("int")
                        .HasComment("How old was the participant when they had their first menstrual period?");

                    b.Property<int?>("MS")
                        .HasColumnType("int")
                        .HasComment("Multiple sclerosis");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NOMENSAGE")
                        .HasColumnType("int")
                        .HasComment("How old was the participant when they had their last menstrual period?");

                    b.Property<bool?>("NOMENSCHEM")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to chemotherapy for cancer or another condition");

                    b.Property<bool?>("NOMENSESTR")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to anti-estrogen medication");

                    b.Property<bool?>("NOMENSHORM")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to hormonal supplements (e.g. the Pill, injections, Mirena, HRT)");

                    b.Property<bool?>("NOMENSHYST")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to hysterectomy (surgical removal of uterus)");

                    b.Property<bool?>("NOMENSNAT")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to natural menopause");

                    b.Property<bool?>("NOMENSOTH")
                        .HasColumnType("bit")
                        .HasComment("Other reason participant has stopped having menstrual periods");

                    b.Property<string>("NOMENSOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other reason participant has stopped having menstrual periods");

                    b.Property<bool?>("NOMENSRAD")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to radiation treatment or other damage/injury to reproductive organs");

                    b.Property<bool?>("NOMENSSURG")
                        .HasColumnType("bit")
                        .HasComment("Participant has stopped having menstrual periods due to surgical removal of both ovaries");

                    b.Property<bool?>("NOMENSUNK")
                        .HasColumnType("bit")
                        .HasComment("Unsure of reason participant has stopped having menstrual periods");

                    b.Property<int?>("NPSYDEV")
                        .HasColumnType("int")
                        .HasComment("Developmental neuropsychiatric disorders");

                    b.Property<int?>("OCD")
                        .HasColumnType("int")
                        .HasComment("Obsessive-compulsive disorder (OCD)");

                    b.Property<int?>("OTHANXDIS")
                        .HasColumnType("int")
                        .HasComment("Other anxiety disorder");

                    b.Property<string>("OTHANXDISX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other anxiety disorder");

                    b.Property<int?>("OTHCOND")
                        .HasColumnType("int")
                        .HasComment("Other medical conditions or procedures");

                    b.Property<string>("OTHCONDX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Specify other medical conditions or procedures");

                    b.Property<int?>("OTHERDEP")
                        .HasColumnType("int")
                        .HasComment("Other specified depressive disorder (DSm-5-TR criteria)");

                    b.Property<int?>("OTHSLEEP")
                        .HasColumnType("int")
                        .HasComment("Other sleep disorder");

                    b.Property<string>("OTHSLEEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other sleep disorder");

                    b.Property<int?>("PACDEFAGE")
                        .HasColumnType("int")
                        .HasComment("Age at first pacemaker and/or defibrillator implantation");

                    b.Property<int?>("PACKSPER")
                        .HasColumnType("int")
                        .HasComment("Average number of packs smoked per day");

                    b.Property<int?>("PANICDIS")
                        .HasColumnType("int")
                        .HasComment("Panic Disorder");

                    b.Property<int?>("PD")
                        .HasColumnType("int")
                        .HasComment("Parkinson’s disease (PD)");

                    b.Property<int?>("PDAGE")
                        .HasColumnType("int")
                        .HasComment("Age at estimated PD symptom onset");

                    b.Property<int?>("PDOTHR")
                        .HasColumnType("int")
                        .HasComment("Other parkinsonism disorder (e.g., DLB)");

                    b.Property<int?>("PDOTHRAGE")
                        .HasColumnType("int")
                        .HasComment("Age at parkinsonism disorder diagnosis");

                    b.Property<int?>("PSYCDIS")
                        .HasColumnType("int")
                        .HasComment("Other psychiatric disorders");

                    b.Property<string>("PSYCDISX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other psychiatric disorders");

                    b.Property<int?>("PTSD")
                        .HasColumnType("int")
                        .HasComment("Post-traumatic stress disorder (PTSD) (DSM-5-TR criteria)");

                    b.Property<int?>("PULMONARY")
                        .HasColumnType("int")
                        .HasComment("Asthma/COPD/pulmonary disease");

                    b.Property<int?>("PVD")
                        .HasColumnType("int")
                        .HasComment("Peripheral vascular disease");

                    b.Property<int?>("PVDAGE")
                        .HasColumnType("int")
                        .HasComment("Age at peripheral vascular disease diagnosis");

                    b.Property<int?>("QUITSMOK")
                        .HasColumnType("int")
                        .HasComment("If the participant quit smoking, specify the age at which they last smoked (i.e., quit)");

                    b.Property<int?>("RBD")
                        .HasColumnType("int")
                        .HasComment("REM sleep behavior disorder");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SCHIZ")
                        .HasColumnType("int")
                        .HasComment("Schizophrenia or other psychosis disorder (DSM-5-TR criteria)");

                    b.Property<int?>("SEIZAGE")
                        .HasColumnType("int")
                        .HasComment("Age at first seizure (excluding childhood febrile seizures)");

                    b.Property<int?>("SEIZNUM")
                        .HasColumnType("int")
                        .HasComment("How many seizures has the participant had in the past 12 months?");

                    b.Property<int?>("SEIZURES")
                        .HasColumnType("int")
                        .HasComment("Epilepsy and/or history of seizures (excluding childhood febrile seizures)");

                    b.Property<int?>("SMOKYRS")
                        .HasColumnType("int")
                        .HasComment("Total years smoked");

                    b.Property<int?>("STROKAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent stroke");

                    b.Property<int?>("STROKMUL")
                        .HasColumnType("int")
                        .HasComment("More than one stroke?");

                    b.Property<int?>("STROKSTAT")
                        .HasColumnType("int")
                        .HasComment("What is status of stroke symptoms?");

                    b.Property<int?>("SUBSTPAST")
                        .HasColumnType("int")
                        .HasComment("Participant used substances including prescription or recreational drugs that caused significant impairment in work, legal, driving, or social areas prior to 12 months ago");

                    b.Property<int?>("SUBSTYEAR")
                        .HasColumnType("int")
                        .HasComment("Participant used substances including prescription or recreational drugs that caused significant impairment in work, legal, driving, or social areas within the past 12 months");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("THYROID")
                        .HasColumnType("int")
                        .HasComment("Thyroid disease");

                    b.Property<int?>("TIAAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent TIA");

                    b.Property<int?>("TOBAC100")
                        .HasColumnType("int")
                        .HasComment("Has participant smoked more than 100 cigarettes in their life?");

                    b.Property<int?>("TOBAC30")
                        .HasColumnType("int")
                        .HasComment("Has participant smoked within the last 30 days?");

                    b.Property<int?>("VALVEAGE")
                        .HasColumnType("int")
                        .HasComment("Age at most recent heart valve replacement or repair procedure");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_A5D2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BPDIASL1")
                        .HasColumnType("int")
                        .HasComment(" Participant blood pressure - Left arm: Diastolic Reading 1");

                    b.Property<int?>("BPDIASL2")
                        .HasColumnType("int")
                        .HasComment(" Participant blood pressure - Left arm: Diastolic Reading 2");

                    b.Property<int?>("BPDIASR1")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Right arm: Diastolic Reading 1");

                    b.Property<int?>("BPDIASR2")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Right arm: Diastolic Reading 2");

                    b.Property<int?>("BPSYSL1")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Left arm: Systolic Reading 1");

                    b.Property<int?>("BPSYSL2")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Left arm: Systolic Reading 2");

                    b.Property<int?>("BPSYSR1")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Right arm: Systolic Reading 1");

                    b.Property<int?>("BPSYSR2")
                        .HasColumnType("int")
                        .HasComment("Participant blood pressure - Right arm: Systolic Reading 2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HEIGHT")
                        .HasColumnType("decimal(3,1)")
                        .HasComment("Participant height (inches)");

                    b.Property<int?>("HIP1")
                        .HasColumnType("int")
                        .HasComment("Hip circumference measurements (inches): Measurement 1");

                    b.Property<int?>("HIP2")
                        .HasColumnType("int")
                        .HasComment("Hip circumference measurements (inches): Measurement 2");

                    b.Property<int?>("HRATE")
                        .HasColumnType("int")
                        .HasComment("Participant resting heart rate (pulse)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("WAIST1")
                        .HasColumnType("int")
                        .HasComment("Waist circumference measurements (inches): Measurement 1");

                    b.Property<int?>("WAIST2")
                        .HasColumnType("int")
                        .HasComment("Waist circumference measurements (inches): Measurement 2");

                    b.Property<int?>("WEIGHT")
                        .HasColumnType("int")
                        .HasComment("Participant weight (lbs.)");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ARISING")
                        .HasColumnType("int");

                    b.Property<string>("ARISINGX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("BRADYKIN")
                        .HasColumnType("int");

                    b.Property<string>("BRADYKIX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FACEXP")
                        .HasColumnType("int");

                    b.Property<string>("FACEXPX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("GAIT")
                        .HasColumnType("int");

                    b.Property<string>("GAITX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("HANDALTL")
                        .HasColumnType("int");

                    b.Property<int?>("HANDALTR")
                        .HasColumnType("int");

                    b.Property<string>("HANDATLX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("HANDATRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("HANDMOVL")
                        .HasColumnType("int");

                    b.Property<int?>("HANDMOVR")
                        .HasColumnType("int");

                    b.Property<string>("HANDMVLX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("HANDMVRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LEGLF")
                        .HasColumnType("int");

                    b.Property<string>("LEGLFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("LEGRT")
                        .HasColumnType("int");

                    b.Property<string>("LEGRTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PDNORMAL")
                        .HasColumnType("bit");

                    b.Property<int?>("POSSTAB")
                        .HasColumnType("int");

                    b.Property<string>("POSSTABX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("POSTURE")
                        .HasColumnType("int");

                    b.Property<string>("POSTUREX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RIGDLOLF")
                        .HasColumnType("int");

                    b.Property<string>("RIGDLOLX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RIGDLORT")
                        .HasColumnType("int");

                    b.Property<string>("RIGDLORX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RIGDNECK")
                        .HasColumnType("int");

                    b.Property<string>("RIGDNEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RIGDUPLF")
                        .HasColumnType("int");

                    b.Property<string>("RIGDUPLX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RIGDUPRT")
                        .HasColumnType("int");

                    b.Property<string>("RIGDUPRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SPEECH")
                        .HasColumnType("int");

                    b.Property<string>("SPEECHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TAPSLF")
                        .HasColumnType("int");

                    b.Property<string>("TAPSLFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TAPSRT")
                        .HasColumnType("int");

                    b.Property<string>("TAPSRTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TOTALUPDRS")
                        .HasColumnType("int");

                    b.Property<int?>("TRACTLHD")
                        .HasColumnType("int");

                    b.Property<string>("TRACTLHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRACTRHD")
                        .HasColumnType("int");

                    b.Property<string>("TRACTRHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRESTFAC")
                        .HasColumnType("int");

                    b.Property<string>("TRESTFAX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRESTLFT")
                        .HasColumnType("int");

                    b.Property<string>("TRESTLFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRESTLHD")
                        .HasColumnType("int");

                    b.Property<string>("TRESTLHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRESTRFT")
                        .HasColumnType("int");

                    b.Property<string>("TRESTRFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TRESTRHD")
                        .HasColumnType("int");

                    b.Property<string>("TRESTRHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B3s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B4", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CDRGLOB")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("CDRLANG")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("CDRSUM")
                        .HasColumnType("decimal(3,1)");

                    b.Property<decimal?>("COMMUN")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("COMPORT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("HOMEHOBB")
                        .HasColumnType("decimal(2,1)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<decimal?>("JUDGMENT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<decimal?>("MEMORY")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ORIENT")
                        .HasColumnType("decimal(2,1)");

                    b.Property<decimal?>("PERSCARE")
                        .HasColumnType("decimal(2,1)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B4s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B5", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AGIT")
                        .HasColumnType("int");

                    b.Property<int?>("AGITSEV")
                        .HasColumnType("int");

                    b.Property<int?>("ANX")
                        .HasColumnType("int");

                    b.Property<int?>("ANXSEV")
                        .HasColumnType("int");

                    b.Property<int?>("APA")
                        .HasColumnType("int");

                    b.Property<int?>("APASEV")
                        .HasColumnType("int");

                    b.Property<int?>("APP")
                        .HasColumnType("int");

                    b.Property<int?>("APPSEV")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DEL")
                        .HasColumnType("int");

                    b.Property<int?>("DELSEV")
                        .HasColumnType("int");

                    b.Property<int?>("DEPD")
                        .HasColumnType("int");

                    b.Property<int?>("DEPDSEV")
                        .HasColumnType("int");

                    b.Property<int?>("DISN")
                        .HasColumnType("int");

                    b.Property<int?>("DISNSEV")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ELAT")
                        .HasColumnType("int");

                    b.Property<int?>("ELATSEV")
                        .HasColumnType("int");

                    b.Property<int?>("HALL")
                        .HasColumnType("int");

                    b.Property<int?>("HALLSEV")
                        .HasColumnType("int");

                    b.Property<int?>("IRR")
                        .HasColumnType("int");

                    b.Property<int?>("IRRSEV")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MOT")
                        .HasColumnType("int");

                    b.Property<int?>("MOTSEV")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NITE")
                        .HasColumnType("int");

                    b.Property<int?>("NITESEV")
                        .HasColumnType("int");

                    b.Property<int?>("NPIQINF")
                        .HasColumnType("int");

                    b.Property<string>("NPIQINFX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B5s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B6", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AFRAID")
                        .HasColumnType("int");

                    b.Property<int?>("BETTER")
                        .HasColumnType("int");

                    b.Property<int?>("BORED")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DROPACT")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EMPTY")
                        .HasColumnType("int");

                    b.Property<int?>("ENERGY")
                        .HasColumnType("int");

                    b.Property<int?>("GDS")
                        .HasColumnType("int");

                    b.Property<int?>("HAPPY")
                        .HasColumnType("int");

                    b.Property<int?>("HELPLESS")
                        .HasColumnType("int");

                    b.Property<int?>("HOPELESS")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MEMPROB")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NOGDS")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SATIS")
                        .HasColumnType("int");

                    b.Property<int?>("SPIRITS")
                        .HasColumnType("int");

                    b.Property<int?>("STAYHOME")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int?>("WONDRFUL")
                        .HasColumnType("int");

                    b.Property<int?>("WRTHLESS")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B6s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B7", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BILLS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EVENTS")
                        .HasColumnType("int");

                    b.Property<int?>("GAMES")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MEALPREP")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PAYATTN")
                        .HasColumnType("int");

                    b.Property<int?>("REMDATES")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SHOPPING")
                        .HasColumnType("int");

                    b.Property<int?>("STOVE")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TAXES")
                        .HasColumnType("int");

                    b.Property<int?>("TRAVEL")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B7s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B8", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ALIENLIMB")
                        .HasColumnType("int");

                    b.Property<int?>("AMPMOTOR")
                        .HasColumnType("int");

                    b.Property<int?>("APHASIA")
                        .HasColumnType("int");

                    b.Property<int?>("APRAXGAZE")
                        .HasColumnType("int");

                    b.Property<int?>("APRAXSP")
                        .HasColumnType("int");

                    b.Property<int?>("AXIALRIG")
                        .HasColumnType("int");

                    b.Property<int?>("CHOREA")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DYSARTH")
                        .HasColumnType("int");

                    b.Property<int?>("DYSTARM")
                        .HasColumnType("int");

                    b.Property<int?>("DYSTLEG")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GAITABN")
                        .HasColumnType("int");

                    b.Property<int?>("GAITFIND")
                        .HasColumnType("int");

                    b.Property<string>("GAITOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("HSPATNEG")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LIMBAPRAX")
                        .HasColumnType("int");

                    b.Property<int?>("LIMBATAX")
                        .HasColumnType("int");

                    b.Property<int?>("LMNDIST")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MASKING")
                        .HasColumnType("int");

                    b.Property<int?>("MYOCLON")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NEUREXAM")
                        .HasColumnType("int");

                    b.Property<bool?>("NORMNREXAM")
                        .HasColumnType("bit");

                    b.Property<int?>("OPTICATAX")
                        .HasColumnType("int");

                    b.Property<int?>("OTHERSIGN")
                        .HasColumnType("int");

                    b.Property<int?>("PARKSIGN")
                        .HasColumnType("int");

                    b.Property<int?>("POSTINST")
                        .HasColumnType("int");

                    b.Property<int?>("PSPOAGNO")
                        .HasColumnType("int");

                    b.Property<int?>("RIGIDARM")
                        .HasColumnType("int");

                    b.Property<int?>("RIGIDLEG")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SLOWINGFM")
                        .HasColumnType("int");

                    b.Property<int?>("SMTAGNO")
                        .HasColumnType("int");

                    b.Property<int?>("STOOPED")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TREMKINE")
                        .HasColumnType("int");

                    b.Property<int?>("TREMPOST")
                        .HasColumnType("int");

                    b.Property<int?>("TREMREST")
                        .HasColumnType("int");

                    b.Property<int?>("UMNDIST")
                        .HasColumnType("int");

                    b.Property<int?>("UNISOMATO")
                        .HasColumnType("int");

                    b.Property<int?>("VFIELDCUT")
                        .HasColumnType("int");

                    b.Property<int?>("VHGAZEPAL")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B8s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B9", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("ALCUSE")
                        .HasColumnType("bit")
                        .HasComment("Alcohol use");

                    b.Property<int?>("BEAGGRS")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Aggression");

                    b.Property<int?>("BEAGIT")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Agitation");

                    b.Property<int?>("BEAHALL")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Psychosis — Auditory hallucinations");

                    b.Property<int?>("BEAHCOMP")
                        .HasColumnType("int")
                        .HasComment("IF YES, do the auditory hallucinations include complex sounds like voices speaking words, or music?");

                    b.Property<int?>("BEAHSIMP")
                        .HasColumnType("int")
                        .HasComment("IF YES, do the auditory hallucinations include simple sounds like knocks or other simple sounds?");

                    b.Property<int?>("BEANGER")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Explosive anger");

                    b.Property<int?>("BEANX")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Anxiety");

                    b.Property<int?>("BEAPATHY")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Apathy, withdrawal");

                    b.Property<int?>("BEDEL")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Psychosis — Abnormal, false, or delusional beliefs");

                    b.Property<int?>("BEDEP")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Depressed mood");

                    b.Property<int?>("BEDISIN")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Disinhibition");

                    b.Property<int?>("BEEMPATH")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Loss of empathy");

                    b.Property<int?>("BEEUPH")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior - Euphoria");

                    b.Property<int?>("BEHAGE")
                        .HasColumnType("int")
                        .HasComment("If any of the mood-related behavioral symptoms in 12a-12f are present, at what age did they begin?");

                    b.Property<int?>("BEIRRIT")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Irritability");

                    b.Property<int?>("BEMODE")
                        .HasColumnType("int")
                        .HasComment("Overall mode of onset for behavioral symptoms");

                    b.Property<string>("BEMODEX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Other mode of onset - specify");

                    b.Property<int?>("BEOBCOM")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Obsessions/compulsions");

                    b.Property<int?>("BEOTHR")
                        .HasColumnType("int")
                        .HasComment("Other behavioral symptom");

                    b.Property<string>("BEOTHRX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Participant currently manifests meaningful change in behavior - Other, specify");

                    b.Property<int?>("BEPERCH")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Personality change");

                    b.Property<int?>("BEREM")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — REM sleep behavior disorder");

                    b.Property<int?>("BEREMAGO")
                        .HasColumnType("int")
                        .HasComment("IF YES, at what age did the dream enactment behavior begin?");

                    b.Property<int?>("BEREMCONF")
                        .HasColumnType("int")
                        .HasComment("Was REM sleep behavior disorder confirmed by polysomnography?");

                    b.Property<int?>("BESUBAB")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior - Substance use");

                    b.Property<int?>("BEVHALL")
                        .HasColumnType("int")
                        .HasComment("Participant currently manifests meaningful change in behavior — Psychosis — Visual hallucinations");

                    b.Property<int?>("BEVPATT")
                        .HasColumnType("int")
                        .HasComment("IF YES, do their hallucinations include patterns that are not definite objects, such as pixelation of flat uniform surfaces?");

                    b.Property<int?>("BEVWELL")
                        .HasColumnType("int")
                        .HasComment("IF YES, do their hallucinations include well formed and detailed images of objects or people, either as independent images or as part of other objects?");

                    b.Property<bool?>("COCAINEUSE")
                        .HasColumnType("bit")
                        .HasComment("Cocaine use");

                    b.Property<int?>("COGAGE")
                        .HasColumnType("int")
                        .HasComment("If any of the cognitive-related behavioral symptoms in 9a-9h are present, at what age did they begin?");

                    b.Property<int?>("COGATTN")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in attention/concentration");

                    b.Property<int?>("COGFLUC")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has fluctuating cognition");

                    b.Property<int?>("COGJUDG")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in executive function (judgment, planning, and problem-solving)");

                    b.Property<int?>("COGLANG")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in language");

                    b.Property<int?>("COGMEM")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in memory.");

                    b.Property<int?>("COGMODE")
                        .HasColumnType("int")
                        .HasComment("Indicate the mode of onset for the most prominent cognitive problem that is causing the participant's complaints and/or affecting the participant's function.");

                    b.Property<string>("COGMODEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other mode of onset of cognitive symptoms");

                    b.Property<int?>("COGORI")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in orientation.");

                    b.Property<int?>("COGOTHR")
                        .HasColumnType("int")
                        .HasComment("Other cognitive impairment");

                    b.Property<string>("COGOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other cognitive domains");

                    b.Property<int?>("COGVIS")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently is meaningfully impaired in visuospatial function");

                    b.Property<int?>("COURSE")
                        .HasColumnType("int")
                        .HasComment("Overall course of decline of cognitive / behavorial / motor syndrome");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DECCLBE")
                        .HasColumnType("int")
                        .HasComment("Based on the clinician’s judgment, is the participant currently experiencing any kind of behavioral symptoms?");

                    b.Property<bool?>("DECCLCOG")
                        .HasColumnType("bit")
                        .HasComment("Based on the clinician’s judgment, is the participant currently experiencing meaningful impairment in cognition?");

                    b.Property<bool?>("DECCLIN")
                        .HasColumnType("bit")
                        .HasComment("Does the participant have any neuropsychiatric/behavioral symptoms or declines in any cognitive or motor domain?");

                    b.Property<bool?>("DECCLMOT")
                        .HasColumnType("bit")
                        .HasComment("Based on the clinician’s judgment, is the participant currently experiencing any motor symptoms?");

                    b.Property<int?>("DECCOG")
                        .HasColumnType("int")
                        .HasComment("Does the participant report a decline in any cognitive domain (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<int?>("DECCOGIN")
                        .HasColumnType("int")
                        .HasComment("Does the co-participant report a decline in any cognitive domain (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<int?>("DECMOT")
                        .HasColumnType("int")
                        .HasComment("Does the participant report a decline in any motor domain (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<int?>("DECMOTIN")
                        .HasColumnType("int")
                        .HasComment("Does the co-participant report a change in any motor domain (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FRSTCHG")
                        .HasColumnType("int")
                        .HasComment("Indicate the predominant domain that was first recognized as changed in the participant");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MOFACE")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Change in facial expression");

                    b.Property<int?>("MOFALLS")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Falls");

                    b.Property<int?>("MOGAIT")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Gait disorder");

                    b.Property<int?>("MOLIMB")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Limb weakness");

                    b.Property<int?>("MOMOALS")
                        .HasColumnType("int")
                        .HasComment("Were changes in motor function suggestive of amyotrophic lateral sclerosis?");

                    b.Property<int?>("MOMODE")
                        .HasColumnType("int")
                        .HasComment("Indicate the mode of onset for the most prominent motor problem that is causing the participant's complaints and/or affecting the participant's function.");

                    b.Property<string>("MOMODEX")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Indicate mode of onset for the most prominent motor problem that is causing the participant's complains and or affecting the participant's function - Other, specify");

                    b.Property<int?>("MOMOPARK")
                        .HasColumnType("int")
                        .HasComment("Were changes in motor function suggestive of parkinsonism?");

                    b.Property<int?>("MOSLOW")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Slowness");

                    b.Property<int?>("MOSPEECH")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Change in speech");

                    b.Property<int?>("MOTORAGE")
                        .HasColumnType("int")
                        .HasComment("If changes in motor function are present in 15a-15g, at what age did they begin?");

                    b.Property<int?>("MOTREM")
                        .HasColumnType("int")
                        .HasComment("Indicate whether the participant currently has meaningful changes in motor function — Tremor");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OPIATEUSE")
                        .HasColumnType("bit")
                        .HasComment("Opiate use");

                    b.Property<bool?>("OTHSUBUSE")
                        .HasColumnType("bit")
                        .HasComment("Other substance use");

                    b.Property<string>("OTHSUBUSEX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasComment("Specify other substance use");

                    b.Property<int?>("PERCHAGE")
                        .HasColumnType("int")
                        .HasComment("If any of the personality-related behavioral symptoms in 12m-12r are present, at what age did they begin?");

                    b.Property<int?>("PSYCHAGE")
                        .HasColumnType("int")
                        .HasComment("If any of the psychosis and impulse control-related behavioral symptoms in 12h-12k are present, at what age did they begin?");

                    b.Property<int?>("PSYCHSYM")
                        .HasColumnType("int")
                        .HasComment("Does the participant report the development of any significant neuropsychiatric/behavioral symptoms (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<int?>("PSYCHSYMIN")
                        .HasColumnType("int")
                        .HasComment("Does the co-participant report the development of any significant neuropsychiatric/behavioral symptoms (relative to stable baseline prior to onset of current syndrome)?");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<bool?>("SEDUSE")
                        .HasColumnType("bit")
                        .HasComment("Sedative/hypnotic use");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_B9s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANIMALS")
                        .HasColumnType("int");

                    b.Property<int?>("BOSTON")
                        .HasColumnType("int");

                    b.Property<int?>("COGSTAT")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DIGIB")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIBLEN")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIF")
                        .HasColumnType("int");

                    b.Property<int?>("DIGIFLEN")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LOGIDAY")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIMEM")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIMO")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIPREV")
                        .HasColumnType("int");

                    b.Property<int?>("LOGIYR")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MEMTIME")
                        .HasColumnType("int");

                    b.Property<int?>("MEMUNITS")
                        .HasColumnType("int");

                    b.Property<int?>("MMSE")
                        .HasColumnType("int");

                    b.Property<int?>("MMSECOMP")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("MMSELAN")
                        .HasColumnType("int");

                    b.Property<string>("MMSELANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("MMSELOC")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEORDA")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEORLO")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEREAS")
                        .HasColumnType("int");

                    b.Property<int?>("MMSEVIS")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPSYCLOC")
                        .HasColumnType("int");

                    b.Property<int?>("NPSYLAN")
                        .HasColumnType("int");

                    b.Property<string>("NPSYLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PENTAGON")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TRAILA")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILALI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILARR")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILB")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBLI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBRR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENRS")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTD")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERNF")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTE")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTI")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTN")
                        .HasColumnType("int");

                    b.Property<int?>("VEG")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_C1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ANIMALS")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD1INT")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD1READ")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD1REC")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD2INT")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD2READ")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD2REC")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD3INT")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD3READ")
                        .HasColumnType("int");

                    b.Property<int?>("CERAD3REC")
                        .HasColumnType("int");

                    b.Property<int?>("CERADDTI")
                        .HasColumnType("int");

                    b.Property<int?>("CERADJ6INT")
                        .HasColumnType("int");

                    b.Property<int?>("CERADJ6REC")
                        .HasColumnType("int");

                    b.Property<int?>("CERADJ7NO")
                        .HasColumnType("int");

                    b.Property<int?>("CERADJ7YES")
                        .HasColumnType("int");

                    b.Property<int?>("COGSTAT")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTCUE")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDRE")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDTI")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTDVR")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTURS")
                        .HasColumnType("int");

                    b.Property<int?>("CRAFTVRS")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DIGBACCT")
                        .HasColumnType("int");

                    b.Property<int?>("DIGBACLS")
                        .HasColumnType("int");

                    b.Property<int?>("DIGFORCT")
                        .HasColumnType("int");

                    b.Property<int?>("DIGFORSL")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MINTPCNC")
                        .HasColumnType("int");

                    b.Property<int?>("MINTPCNG")
                        .HasColumnType("int");

                    b.Property<int?>("MINTSCNC")
                        .HasColumnType("int");

                    b.Property<int?>("MINTSCNG")
                        .HasColumnType("int");

                    b.Property<int?>("MINTTOTS")
                        .HasColumnType("int");

                    b.Property<int?>("MINTTOTW")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAABST")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLOC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLOH")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACLON")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACOMP")
                        .HasColumnType("int");

                    b.Property<int?>("MOCACUBE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCADIGI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAFLUE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCALAN")
                        .HasColumnType("int");

                    b.Property<string>("MOCALANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("MOCALETT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCALOC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCANAMI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORCT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORDT")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORDY")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORMO")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORPL")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAORYR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREAS")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECC")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECN")
                        .HasColumnType("int");

                    b.Property<int?>("MOCARECR")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREGI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAREPE")
                        .HasColumnType("int");

                    b.Property<int?>("MOCASER7")
                        .HasColumnType("int");

                    b.Property<int?>("MOCATOTS")
                        .HasColumnType("int");

                    b.Property<int?>("MOCATRAI")
                        .HasColumnType("int");

                    b.Property<int?>("MOCAVIS")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NPSYCLOC")
                        .HasColumnType("int");

                    b.Property<int?>("NPSYLAN")
                        .HasColumnType("int");

                    b.Property<string>("NPSYLANX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RESPASST")
                        .HasColumnType("int");

                    b.Property<int?>("RESPDISN")
                        .HasColumnType("int");

                    b.Property<int?>("RESPDIST")
                        .HasColumnType("int");

                    b.Property<int?>("RESPEMOT")
                        .HasColumnType("int");

                    b.Property<int?>("RESPFATG")
                        .HasColumnType("int");

                    b.Property<int?>("RESPHEAR")
                        .HasColumnType("int");

                    b.Property<int?>("RESPINTR")
                        .HasColumnType("int");

                    b.Property<int?>("RESPOTH")
                        .HasColumnType("int");

                    b.Property<string>("RESPOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("RESPVAL")
                        .HasColumnType("int");

                    b.Property<int?>("REY1INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY1REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY2INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY2REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY3INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY3REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY4INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY4REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY5INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY5REC")
                        .HasColumnType("int");

                    b.Property<int?>("REY6INT")
                        .HasColumnType("int");

                    b.Property<int?>("REY6REC")
                        .HasColumnType("int");

                    b.Property<int?>("REYBINT")
                        .HasColumnType("int");

                    b.Property<int?>("REYBREC")
                        .HasColumnType("int");

                    b.Property<int?>("REYDINT")
                        .HasColumnType("int");

                    b.Property<int?>("REYDREC")
                        .HasColumnType("int");

                    b.Property<int?>("REYDTI")
                        .HasColumnType("int");

                    b.Property<int?>("REYFPOS")
                        .HasColumnType("int");

                    b.Property<int?>("REYMETHOD")
                        .HasColumnType("int");

                    b.Property<int?>("REYTCOR")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TRAILA")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILALI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILARR")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILB")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBLI")
                        .HasColumnType("int");

                    b.Property<int?>("TRAILBRR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENRS")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSBENTD")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERFN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLC")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLN")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERLR")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERNF")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTE")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTI")
                        .HasColumnType("int");

                    b.Property<int?>("UDSVERTN")
                        .HasColumnType("int");

                    b.Property<int?>("VEG")
                        .HasColumnType("int");

                    b.Property<int?>("VERBALTEST")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_C2s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ADMUT")
                        .HasColumnType("int");

                    b.Property<int?>("ALCABUSE")
                        .HasColumnType("int");

                    b.Property<int?>("ALCDEM")
                        .HasColumnType("int");

                    b.Property<int?>("ALCDEMIF")
                        .HasColumnType("int");

                    b.Property<int?>("ALZDIS")
                        .HasColumnType("int");

                    b.Property<int?>("ALZDISIF")
                        .HasColumnType("int");

                    b.Property<int?>("AMNDEM")
                        .HasColumnType("int");

                    b.Property<int?>("AMYLCSF")
                        .HasColumnType("int");

                    b.Property<int?>("AMYLPET")
                        .HasColumnType("int");

                    b.Property<int?>("ANXIET")
                        .HasColumnType("int");

                    b.Property<int?>("ANXIETIF")
                        .HasColumnType("int");

                    b.Property<int?>("BIPOLDIF")
                        .HasColumnType("int");

                    b.Property<int?>("BIPOLDX")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINCTE")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINJ")
                        .HasColumnType("int");

                    b.Property<int?>("BRNINJIF")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH2")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH2F")
                        .HasColumnType("int");

                    b.Property<string>("COGOTH2X")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGOTH3")
                        .HasColumnType("int");

                    b.Property<int?>("COGOTH3F")
                        .HasColumnType("int");

                    b.Property<string>("COGOTH3X")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("COGOTHIF")
                        .HasColumnType("int");

                    b.Property<string>("COGOTHX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("CORT")
                        .HasColumnType("int");

                    b.Property<int?>("CORTIF")
                        .HasColumnType("int");

                    b.Property<int?>("CSFTAU")
                        .HasColumnType("int");

                    b.Property<int?>("CVD")
                        .HasColumnType("int");

                    b.Property<int?>("CVDIF")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DATSCAN")
                        .HasColumnType("int");

                    b.Property<int?>("DELIR")
                        .HasColumnType("int");

                    b.Property<int?>("DELIRIF")
                        .HasColumnType("int");

                    b.Property<int?>("DEMENTED")
                        .HasColumnType("int");

                    b.Property<int?>("DEP")
                        .HasColumnType("int");

                    b.Property<int?>("DEPIF")
                        .HasColumnType("int");

                    b.Property<int?>("DEPTREAT")
                        .HasColumnType("int");

                    b.Property<int?>("DOWNS")
                        .HasColumnType("int");

                    b.Property<int?>("DOWNSIF")
                        .HasColumnType("int");

                    b.Property<int?>("DXMETHOD")
                        .HasColumnType("int");

                    b.Property<int?>("DYSILL")
                        .HasColumnType("int");

                    b.Property<int?>("DYSILLIF")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EPILEP")
                        .HasColumnType("int");

                    b.Property<int?>("EPILEPIF")
                        .HasColumnType("int");

                    b.Property<int?>("ESSTREIF")
                        .HasColumnType("int");

                    b.Property<int?>("ESSTREM")
                        .HasColumnType("int");

                    b.Property<int?>("FDGAD")
                        .HasColumnType("int");

                    b.Property<int?>("FDGFTLD")
                        .HasColumnType("int");

                    b.Property<int?>("FTDSYN")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMO")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMOIF")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDMUT")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDNOIF")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDNOS")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDSUBT")
                        .HasColumnType("int");

                    b.Property<string>("FTLDSUBX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("HIPPATR")
                        .HasColumnType("int");

                    b.Property<int?>("HIV")
                        .HasColumnType("int");

                    b.Property<int?>("HIVIF")
                        .HasColumnType("int");

                    b.Property<int?>("HUNT")
                        .HasColumnType("int");

                    b.Property<int?>("HUNTIF")
                        .HasColumnType("int");

                    b.Property<int?>("HYCEPH")
                        .HasColumnType("int");

                    b.Property<int?>("HYCEPHIF")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGEWMH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGLAC")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGLINF")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMACH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMICH")
                        .HasColumnType("int");

                    b.Property<int?>("IMAGMWMH")
                        .HasColumnType("int");

                    b.Property<int?>("IMPNOMCI")
                        .HasColumnType("int");

                    b.Property<int?>("IMPSUB")
                        .HasColumnType("int");

                    b.Property<int?>("IMPSUBIF")
                        .HasColumnType("int");

                    b.Property<int?>("INFNETW")
                        .HasColumnType("int");

                    b.Property<int?>("INFWMH")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("LBDIF")
                        .HasColumnType("int");

                    b.Property<int?>("LBDIS")
                        .HasColumnType("int");

                    b.Property<int?>("LBDSYN")
                        .HasColumnType("int");

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("MCIAMEM")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPEX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPLAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPLUS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIAPVIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1ATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1EX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1LAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN1VIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2ATT")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2EX")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2LAN")
                        .HasColumnType("int");

                    b.Property<int?>("MCIN2VIS")
                        .HasColumnType("int");

                    b.Property<int?>("MCINON1")
                        .HasColumnType("int");

                    b.Property<int?>("MCINON2")
                        .HasColumnType("int");

                    b.Property<int?>("MEDS")
                        .HasColumnType("int");

                    b.Property<int?>("MEDSIF")
                        .HasColumnType("int");

                    b.Property<int?>("MRFTLD")
                        .HasColumnType("int");

                    b.Property<int?>("MSA")
                        .HasColumnType("int");

                    b.Property<int?>("MSAIF")
                        .HasColumnType("int");

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NAMNDEM")
                        .HasColumnType("int");

                    b.Property<int?>("NEOP")
                        .HasColumnType("int");

                    b.Property<int?>("NEOPIF")
                        .HasColumnType("int");

                    b.Property<int?>("NEOPSTAT")
                        .HasColumnType("int");

                    b.Property<int?>("NORMCOG")
                        .HasColumnType("int");

                    b.Property<int?>("OTHBIOM")
                        .HasColumnType("int");

                    b.Property<string>("OTHBIOMX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHCOG")
                        .HasColumnType("int");

                    b.Property<int?>("OTHCOGIF")
                        .HasColumnType("int");

                    b.Property<string>("OTHCOGX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHMUT")
                        .HasColumnType("int");

                    b.Property<string>("OTHMUTX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("OTHPSY")
                        .HasColumnType("int");

                    b.Property<int?>("OTHPSYIF")
                        .HasColumnType("int");

                    b.Property<string>("OTHPSYX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("PARK")
                        .HasColumnType("int");

                    b.Property<int?>("PCA")
                        .HasColumnType("int");

                    b.Property<int?>("PPASYN")
                        .HasColumnType("int");

                    b.Property<int?>("PPASYNT")
                        .HasColumnType("int");

                    b.Property<int?>("PREVSTK")
                        .HasColumnType("int");

                    b.Property<int?>("PRION")
                        .HasColumnType("int");

                    b.Property<int?>("PRIONIF")
                        .HasColumnType("int");

                    b.Property<int?>("PSP")
                        .HasColumnType("int");

                    b.Property<int?>("PSPIF")
                        .HasColumnType("int");

                    b.Property<int?>("PTSDDX")
                        .HasColumnType("int");

                    b.Property<int?>("PTSDDXIF")
                        .HasColumnType("int");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<int?>("SCHIZOIF")
                        .HasColumnType("int");

                    b.Property<int?>("SCHIZOP")
                        .HasColumnType("int");

                    b.Property<int?>("STKIMAG")
                        .HasColumnType("int");

                    b.Property<int?>("STROKDEC")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TAUPETAD")
                        .HasColumnType("int");

                    b.Property<int?>("TPETFTLD")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_D1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.DrugCodeLookup", b =>
                {
                    b.Property<int>("RxNormId")
                        .HasColumnType("int");

                    b.Property<string>("BrandNames")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DrugName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsOverTheCounter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.HasKey("RxNormId");

                    b.ToTable("DrugCodesLookup");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.FormStatus", b =>
                {
                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Kind")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.HasKey("VisitId", "Kind");

                    b.ToTable((string)null);

                    b.ToView("vw_FormStatuses", (string)null);
                });

            modelBuilder.Entity("UDS.Net.API.Entities.M1", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormId"));

                    b.Property<int?>("ACONSENT")
                        .HasColumnType("int");

                    b.Property<int?>("AUTOPSY")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEDY")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEMO")
                        .HasColumnType("int");

                    b.Property<int?>("CHANGEYR")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DEATHDY")
                        .HasColumnType("int");

                    b.Property<int?>("DEATHMO")
                        .HasColumnType("int");

                    b.Property<int?>("DEATHYR")
                        .HasColumnType("int");

                    b.Property<int?>("DECEASED")
                        .HasColumnType("int");

                    b.Property<int?>("DISCDAY")
                        .HasColumnType("int");

                    b.Property<int?>("DISCMO")
                        .HasColumnType("int");

                    b.Property<int?>("DISCONT")
                        .HasColumnType("int");

                    b.Property<int?>("DISCYR")
                        .HasColumnType("int");

                    b.Property<int?>("DROPREAS")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FTLDDISC")
                        .HasColumnType("int");

                    b.Property<int?>("FTLDREAS")
                        .HasColumnType("int");

                    b.Property<string>("FTLDREAX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NURSEDY")
                        .HasColumnType("int");

                    b.Property<int?>("NURSEMO")
                        .HasColumnType("int");

                    b.Property<int?>("NURSEYR")
                        .HasColumnType("int");

                    b.Property<int?>("PROTOCOL")
                        .HasColumnType("int");

                    b.Property<int>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<int?>("RECOGIM")
                        .HasColumnType("int");

                    b.Property<int?>("REJOIN")
                        .HasColumnType("int");

                    b.Property<int?>("RENAVAIL")
                        .HasColumnType("int");

                    b.Property<int?>("RENURSE")
                        .HasColumnType("int");

                    b.Property<int?>("REPHYILL")
                        .HasColumnType("int");

                    b.Property<int?>("REREFUSE")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("FormId");

                    b.HasIndex("ParticipationId");

                    b.ToTable("tbl_M1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParticipationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LegacyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.T1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FormId")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsIncluded")
                        .HasColumnType("bit")
                        .HasColumnName("SUB")
                        .HasColumnOrder(7);

                    b.Property<int?>("Language")
                        .HasColumnType("int")
                        .HasColumnName("LANG")
                        .HasColumnOrder(3);

                    b.Property<int?>("Mode")
                        .HasColumnType("int")
                        .HasColumnName("MODE")
                        .HasColumnOrder(4);

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("NOT")
                        .HasColumnOrder(8);

                    b.Property<int?>("RemoteMode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEMODE")
                        .HasColumnOrder(5);

                    b.Property<int?>("RemoteReasonCode")
                        .HasColumnType("int")
                        .HasColumnName("REMOTEREASON")
                        .HasColumnOrder(6);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnOrder(2);

                    b.Property<int?>("TELCOG")
                        .HasColumnType("int");

                    b.Property<int?>("TELCOV")
                        .HasColumnType("int");

                    b.Property<int?>("TELHOME")
                        .HasColumnType("int");

                    b.Property<int?>("TELILL")
                        .HasColumnType("int");

                    b.Property<int?>("TELINPER")
                        .HasColumnType("int");

                    b.Property<int?>("TELMILE")
                        .HasColumnType("int");

                    b.Property<int?>("TELMOD")
                        .HasColumnType("int");

                    b.Property<int?>("TELOTHR")
                        .HasColumnType("int");

                    b.Property<string>("TELOTHRX")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("TELREFU")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("VisitId")
                        .IsUnique();

                    b.ToTable("tbl_T1s");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VisitId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Kind")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("ParticipationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationId", "Number")
                        .IsUnique();

                    b.ToTable("tbl_Visits");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A1")
                        .HasForeignKey("UDS.Net.API.Entities.A1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A1a", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A1a")
                        .HasForeignKey("UDS.Net.API.Entities.A1a", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A2")
                        .HasForeignKey("UDS.Net.API.Entities.A2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A3", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A3")
                        .HasForeignKey("UDS.Net.API.Entities.A3", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID1", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID10", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID11", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID12", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID13", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID14", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID15", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID2", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID3", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID4", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID5", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID6", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID7", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID8", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "KID9", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB1", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB10", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB11", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB12", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB13", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB14", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB15", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB16", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB17", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB18", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB19", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB2", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB20", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB3", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB4", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB5", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB6", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB7", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB8", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A3FamilyMember", "SIB9", b1 =>
                        {
                            b1.Property<int>("A3Id")
                                .HasColumnType("int");

                            b1.Property<int?>("AGD")
                                .HasColumnType("int");

                            b1.Property<int?>("AGO")
                                .HasColumnType("int");

                            b1.Property<string>("ETPR")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<string>("ETSEC")
                                .HasMaxLength(2)
                                .HasColumnType("nvarchar(2)");

                            b1.Property<int?>("MEVAL")
                                .HasColumnType("int");

                            b1.Property<int?>("YOB")
                                .HasColumnType("int");

                            b1.HasKey("A3Id");

                            b1.ToTable("tbl_A3s");

                            b1.WithOwner()
                                .HasForeignKey("A3Id");
                        });

                    b.Navigation("KID1")
                        .IsRequired();

                    b.Navigation("KID10")
                        .IsRequired();

                    b.Navigation("KID11")
                        .IsRequired();

                    b.Navigation("KID12")
                        .IsRequired();

                    b.Navigation("KID13")
                        .IsRequired();

                    b.Navigation("KID14")
                        .IsRequired();

                    b.Navigation("KID15")
                        .IsRequired();

                    b.Navigation("KID2")
                        .IsRequired();

                    b.Navigation("KID3")
                        .IsRequired();

                    b.Navigation("KID4")
                        .IsRequired();

                    b.Navigation("KID5")
                        .IsRequired();

                    b.Navigation("KID6")
                        .IsRequired();

                    b.Navigation("KID7")
                        .IsRequired();

                    b.Navigation("KID8")
                        .IsRequired();

                    b.Navigation("KID9")
                        .IsRequired();

                    b.Navigation("SIB1")
                        .IsRequired();

                    b.Navigation("SIB10")
                        .IsRequired();

                    b.Navigation("SIB11")
                        .IsRequired();

                    b.Navigation("SIB12")
                        .IsRequired();

                    b.Navigation("SIB13")
                        .IsRequired();

                    b.Navigation("SIB14")
                        .IsRequired();

                    b.Navigation("SIB15")
                        .IsRequired();

                    b.Navigation("SIB16")
                        .IsRequired();

                    b.Navigation("SIB17")
                        .IsRequired();

                    b.Navigation("SIB18")
                        .IsRequired();

                    b.Navigation("SIB19")
                        .IsRequired();

                    b.Navigation("SIB2")
                        .IsRequired();

                    b.Navigation("SIB20")
                        .IsRequired();

                    b.Navigation("SIB3")
                        .IsRequired();

                    b.Navigation("SIB4")
                        .IsRequired();

                    b.Navigation("SIB5")
                        .IsRequired();

                    b.Navigation("SIB6")
                        .IsRequired();

                    b.Navigation("SIB7")
                        .IsRequired();

                    b.Navigation("SIB8")
                        .IsRequired();

                    b.Navigation("SIB9")
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A4")
                        .HasForeignKey("UDS.Net.API.Entities.A4", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID1", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID10", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID11", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID12", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID13", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID14", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID15", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID16", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID17", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID18", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID19", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID2", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID20", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID21", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID22", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID23", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID24", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID25", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID26", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID27", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID28", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID29", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID3", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID30", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID31", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID32", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID33", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID34", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID35", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID36", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID37", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID38", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID39", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID4", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID40", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID5", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID6", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID7", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID8", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4D", "RXNORMID9", b1 =>
                        {
                            b1.Property<int>("A4Id")
                                .HasColumnType("int");

                            b1.Property<int?>("RxNormId")
                                .HasColumnType("int");

                            b1.HasKey("A4Id");

                            b1.HasIndex("RxNormId");

                            b1.ToTable("tbl_A4s");

                            b1.WithOwner()
                                .HasForeignKey("A4Id");

                            b1.HasOne("UDS.Net.API.Entities.DrugCodeLookup", "DrugCode")
                                .WithMany()
                                .HasForeignKey("RxNormId");

                            b1.Navigation("DrugCode");
                        });

                    b.Navigation("RXNORMID1")
                        .IsRequired();

                    b.Navigation("RXNORMID10")
                        .IsRequired();

                    b.Navigation("RXNORMID11")
                        .IsRequired();

                    b.Navigation("RXNORMID12")
                        .IsRequired();

                    b.Navigation("RXNORMID13")
                        .IsRequired();

                    b.Navigation("RXNORMID14")
                        .IsRequired();

                    b.Navigation("RXNORMID15")
                        .IsRequired();

                    b.Navigation("RXNORMID16")
                        .IsRequired();

                    b.Navigation("RXNORMID17")
                        .IsRequired();

                    b.Navigation("RXNORMID18")
                        .IsRequired();

                    b.Navigation("RXNORMID19")
                        .IsRequired();

                    b.Navigation("RXNORMID2")
                        .IsRequired();

                    b.Navigation("RXNORMID20")
                        .IsRequired();

                    b.Navigation("RXNORMID21")
                        .IsRequired();

                    b.Navigation("RXNORMID22")
                        .IsRequired();

                    b.Navigation("RXNORMID23")
                        .IsRequired();

                    b.Navigation("RXNORMID24")
                        .IsRequired();

                    b.Navigation("RXNORMID25")
                        .IsRequired();

                    b.Navigation("RXNORMID26")
                        .IsRequired();

                    b.Navigation("RXNORMID27")
                        .IsRequired();

                    b.Navigation("RXNORMID28")
                        .IsRequired();

                    b.Navigation("RXNORMID29")
                        .IsRequired();

                    b.Navigation("RXNORMID3")
                        .IsRequired();

                    b.Navigation("RXNORMID30")
                        .IsRequired();

                    b.Navigation("RXNORMID31")
                        .IsRequired();

                    b.Navigation("RXNORMID32")
                        .IsRequired();

                    b.Navigation("RXNORMID33")
                        .IsRequired();

                    b.Navigation("RXNORMID34")
                        .IsRequired();

                    b.Navigation("RXNORMID35")
                        .IsRequired();

                    b.Navigation("RXNORMID36")
                        .IsRequired();

                    b.Navigation("RXNORMID37")
                        .IsRequired();

                    b.Navigation("RXNORMID38")
                        .IsRequired();

                    b.Navigation("RXNORMID39")
                        .IsRequired();

                    b.Navigation("RXNORMID4")
                        .IsRequired();

                    b.Navigation("RXNORMID40")
                        .IsRequired();

                    b.Navigation("RXNORMID5")
                        .IsRequired();

                    b.Navigation("RXNORMID6")
                        .IsRequired();

                    b.Navigation("RXNORMID7")
                        .IsRequired();

                    b.Navigation("RXNORMID8")
                        .IsRequired();

                    b.Navigation("RXNORMID9")
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A4a", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A4a")
                        .HasForeignKey("UDS.Net.API.Entities.A4a", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment1", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL1");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO1");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR1");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM1");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO1");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR1");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB1");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF1");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH1");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX1");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN1");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU1");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP1");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL1");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment2", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL2");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO2");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR2");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM2");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO2");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR2");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB2");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF2");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH2");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX2");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN2");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU2");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP2");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL2");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment3", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL3");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO3");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR3");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM3");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO3");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR3");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB3");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF3");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH3");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX3");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN3");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU3");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP3");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL3");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment4", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL4");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO4");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR4");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM4");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO4");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR4");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB4");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF4");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH4");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX4");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN4");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU4");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP4");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL4");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment5", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL5");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO5");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR5");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM5");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO5");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR5");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB5");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF5");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH5");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX5");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN5");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU5");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP5");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL5");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment6", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL6");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO6");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR6");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM6");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO6");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR6");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB6");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF6");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH6");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX6");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN6");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU6");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP6");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL6");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment7", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL7");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO7");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR7");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM7");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO7");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR7");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB7");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF7");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH7");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX7");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN7");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU7");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP7");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL7");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.OwnsOne("UDS.Net.API.Entities.A4aTreatment", "Treatment8", b1 =>
                        {
                            b1.Property<int>("A4aId")
                                .HasColumnType("int");

                            b1.Property<int?>("CARETRIAL")
                                .HasColumnType("int")
                                .HasColumnName("CARETRIAL8");

                            b1.Property<int?>("ENDMO")
                                .HasColumnType("int")
                                .HasColumnName("ENDMO8");

                            b1.Property<int?>("ENDYEAR")
                                .HasColumnType("int")
                                .HasColumnName("ENDYEAR8");

                            b1.Property<string>("NCTNUM")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("NCTNUM8");

                            b1.Property<int?>("STARTMO")
                                .HasColumnType("int")
                                .HasColumnName("STARTMO8");

                            b1.Property<int?>("STARTYEAR")
                                .HasColumnType("int")
                                .HasColumnName("STARTYEAR8");

                            b1.Property<bool?>("TARGETAB")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETAB8");

                            b1.Property<bool?>("TARGETINF")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETINF8");

                            b1.Property<bool?>("TARGETOTH")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETOTH8");

                            b1.Property<string>("TARGETOTX")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TARGETOTX8");

                            b1.Property<bool?>("TARGETSYN")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETSYN8");

                            b1.Property<bool?>("TARGETTAU")
                                .HasColumnType("bit")
                                .HasColumnName("TARGETTAU8");

                            b1.Property<int?>("TRIALGRP")
                                .HasColumnType("int")
                                .HasColumnName("TRIALGRP8");

                            b1.Property<string>("TRTTRIAL")
                                .HasMaxLength(60)
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("TRTTRIAL8");

                            b1.HasKey("A4aId");

                            b1.ToTable("tbl_A4as");

                            b1.WithOwner()
                                .HasForeignKey("A4aId");
                        });

                    b.Navigation("Treatment1")
                        .IsRequired();

                    b.Navigation("Treatment2")
                        .IsRequired();

                    b.Navigation("Treatment3")
                        .IsRequired();

                    b.Navigation("Treatment4")
                        .IsRequired();

                    b.Navigation("Treatment5")
                        .IsRequired();

                    b.Navigation("Treatment6")
                        .IsRequired();

                    b.Navigation("Treatment7")
                        .IsRequired();

                    b.Navigation("Treatment8")
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.A5D2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("A5D2")
                        .HasForeignKey("UDS.Net.API.Entities.A5D2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B1")
                        .HasForeignKey("UDS.Net.API.Entities.B1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B3", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B3")
                        .HasForeignKey("UDS.Net.API.Entities.B3", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B4", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B4")
                        .HasForeignKey("UDS.Net.API.Entities.B4", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B5", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B5")
                        .HasForeignKey("UDS.Net.API.Entities.B5", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B6", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B6")
                        .HasForeignKey("UDS.Net.API.Entities.B6", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B7", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B7")
                        .HasForeignKey("UDS.Net.API.Entities.B7", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B8", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B8")
                        .HasForeignKey("UDS.Net.API.Entities.B8", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.B9", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("B9")
                        .HasForeignKey("UDS.Net.API.Entities.B9", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("C1")
                        .HasForeignKey("UDS.Net.API.Entities.C1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.C2", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("C2")
                        .HasForeignKey("UDS.Net.API.Entities.C2", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.D1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("D1")
                        .HasForeignKey("UDS.Net.API.Entities.D1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.FormStatus", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithMany("FormStatuses")
                        .HasForeignKey("VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.M1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Participation", "Participation")
                        .WithMany("M1s")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.T1", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Visit", null)
                        .WithOne("T1")
                        .HasForeignKey("UDS.Net.API.Entities.T1", "VisitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.HasOne("UDS.Net.API.Entities.Participation", "Participation")
                        .WithMany("Visits")
                        .HasForeignKey("ParticipationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Participation");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Participation", b =>
                {
                    b.Navigation("M1s");

                    b.Navigation("Visits");
                });

            modelBuilder.Entity("UDS.Net.API.Entities.Visit", b =>
                {
                    b.Navigation("A1")
                        .IsRequired();

                    b.Navigation("A1a")
                        .IsRequired();

                    b.Navigation("A2")
                        .IsRequired();

                    b.Navigation("A3")
                        .IsRequired();

                    b.Navigation("A4")
                        .IsRequired();

                    b.Navigation("A4a")
                        .IsRequired();

                    b.Navigation("A5D2")
                        .IsRequired();

                    b.Navigation("B1")
                        .IsRequired();

                    b.Navigation("B3")
                        .IsRequired();

                    b.Navigation("B4")
                        .IsRequired();

                    b.Navigation("B5")
                        .IsRequired();

                    b.Navigation("B6")
                        .IsRequired();

                    b.Navigation("B7")
                        .IsRequired();

                    b.Navigation("B8")
                        .IsRequired();

                    b.Navigation("B9")
                        .IsRequired();

                    b.Navigation("C1")
                        .IsRequired();

                    b.Navigation("C2")
                        .IsRequired();

                    b.Navigation("D1")
                        .IsRequired();

                    b.Navigation("FormStatuses");

                    b.Navigation("T1");
                });
#pragma warning restore 612, 618
        }
    }
}
